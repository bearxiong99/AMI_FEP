<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for ...
-->
<beans 	xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:jee="http://www.springframework.org/schema/jee"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:jaxws="http://cxf.apache.org/jaxws"
		xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://cxf.apache.org/jaxws http://cxf.apache.org/schema/jaxws.xsd">
	<!-- ========================= 业务处理器对象定义 ========================= -->
	
	<!-- ========================= 业务处理器与营销加密机webservice接口 ========================= -->
	<!--
	<bean id="bp.hsmService"
		class="org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean">
		<property name="serviceFactoryClass">
			<value>org.apache.axis.client.ServiceFactory</value>
		</property>
		<property name="serviceInterface" value="cn.hexing.fk.bp.ws.HsmService" />
		<property name="wsdlDocumentUrl" value="${bp.ws.server}/web/services/HsmService?wsdl" />
		<property name="namespaceUri" value="${bp.ws.server}/web/services/HsmService" />
		<property name="serviceName" value="HsmServiceService" />
		<property name="portName" value="HsmService" />
	</bean>
	-->
	<!-- ========================= 业务处理器的上行消息队列 ========================= -->
	<bean id="bp.msgqueue.cachequeue" class="cn.hexing.fk.common.queue.CacheQueue">
		<property name="maxSize" value="51200"/>
		<property name="minSize" value="5120"/>
		<property name="maxFileSize" value="100"/>
		<property name="key" value="bp.msgqueue"/>
		<property name="messageLoader" ref="messageLoader.MultiProtoMessageLoader"/>
	</bean>
	<bean id="bp.msgqueue" class="cn.hexing.fk.bp.msgqueue.BPMessageQueue">
		<property name="cacheQueue" ref="bp.msgqueue.cachequeue"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="client" ref="bp.com.client"/>
	</bean>

	<!-- =========================通讯前置机客户端收发消息事件处理器 ========================= -->
	<bean id="bp.event.handle.fe" class="cn.hexing.fk.bp.feclient.FEMessageEventHandler">
		<property name="msgQueue" ref="bp.msgqueue"/>
	</bean>

	<!-- ========================= 通讯前置机客户端对象 ========================= -->			
	<bean id="bp.com.client" class="cn.hexing.fk.clientmod.ClusterClientModule">
		<property name="clientsUrl" value="${bp.fe.client.url}"/>
		<property name="heartInterval" value="120"/>
		<property name="eventHandler" ref="bp.event.handle.fe"/>
		<property name="requestNum" value="500"/>
	</bean>
	
	<!-- =========================业务处理器报文处理器========================= -->
	<bean id="bp.msg.processor" class="cn.hexing.fk.bp.businessprocess.BProcessor">
		<property name="msgQueue" ref="bp.msgqueue"/>
		<property name="asycService" ref="bp.asyncService"/>
		<property name="masterDbService" ref="master.dbservice"/>
		<property name="manageRtu" ref="manageRtu"/>	
	</bean>
	<bean id="bp.msg.filetransfer" class="cn.hexing.fk.bp.webapi.WebMessageFileTransfer"
		factory-method="getInstance" init-method="init">
		<property name="msgQueue" ref="bp.msgqueue"/>
		<property name="asycService" ref="bp.asyncService"/>
		<property name="masterDbService" ref="master.dbservice"/>
		<property name="overTime" value="15"/> <!-- unit min -->
		<property name="resendCount" value="3"/> <!-- unit min -->
	</bean>
	
	
	<!-- =========================业务处理器dlms报文处理器========================= -->
	<bean id="bp.dlms.processor" class="cn.hexing.fk.bp.dlms.DlmsEventProcessor"
		factory-method="getInstance" init-method="init">
		<property name="messageQueue" ref="bp.msgqueue"/>
		<property name="asycService" ref="bp.asyncService"/>
		<property name="gwRelayNeedAuth" value="false"></property>
		<property name="resendInterval" value="15"></property> <!-- second -->
		<property name="relayResendInterval" value="45"></property><!-- second -->
		<property name="sessionTimeout" value="0"></property> <!-- mininute -->
		<property name="maxResend" value="0"></property>  <!-- resend time -->
		<property name="droppedTimeOut" value="10"/> <!-- check is online , mininute -->
	</bean>
	<!-- =========================业务处理器ansi报文处理器========================= -->
	<bean id="bp.ansi.processor" class="cn.hexing.fk.bp.ansi.AnsiEventProcessor"
		factory-method="getInstance" init-method="init">
		<property name="messageQueue" ref="bp.msgqueue"/>
		<property name="asycService" ref="bp.asyncService"/>
<!--		<property name="gwRelayNeedAuth" value="false"></property>-->
<!--		<property name="resendInterval" value="15"></property>  second -->
<!--		<property name="relayResendInterval" value="45"></property> second -->
<!--		<property name="sessionTimeout" value="0"></property>  mininute -->
<!--		<property name="maxResend" value="0"></property>   resend time -->
<!--		<property name="droppedTimeOut" value="10"/>  check is online , mininute -->
	</bean>

	<bean id="bp.gg.processor" class="cn.hexing.fk.bp.processor.gg.GgMessageProcessor"
		factory-method="getInstance" init-method="init">
		<property name="messageQueue" ref="bp.msgqueue" />
		<property name="resendInterval" value="15"></property> <!-- second -->
		<property name="maxResend" value="0"></property>  <!-- resend time -->
		<property name="g3MeterBox" value="${isG3MeterBox}"></property>
	</bean>
	
	<bean id="bp.gg.upgrade.processor" class="cn.hexing.fk.bp.processor.gg.GgUpgradeProcessor"
		factory-method="getInstance">
		<property name="dbService" ref="master.dbservice"/>	
		<property name="service" ref="bp.asyncService"/>
	</bean>
	
	<!-- ========================= 主站web服务端对象 ========================= -->
	<bean id="messageCreator.Web" class="cn.hexing.fk.bp.webapi.MessageWebCreator"/>
	<bean id="bp.server.web" class="cn.hexing.fk.sockserver.TcpSocketServer"
		parent="ISocketServer">
		<property name="name" value="webServer"/>
		<property name="port"><value>${bp.web.server.port}</value></property>
		<property name="bufLength" value="20480"/>
		<property name="ioThreadSize" value="2"/>
		<property name="messageCreator" ref="messageCreator.Web"/>
		<property name="writeFirstCount" value="100"/>
		<property name="maxContinueRead" value="10"/>
		<property name="timeout" value="120"/>		
	</bean>
	<bean id="webserver.event.hook" class="cn.hexing.fk.bp.webapi.WebAPIServerEventHandler"
		parent="SimpleEventHandler" >
		<property name="name" value="web.EventHook" />
		<property name="source" ref="bp.server.web"/>
		<property name="msgQueue" ref="bp.msgqueue"/>
		<property name="masterDbService" ref="master.dbservice"/>	
		<!--<property name="hsmService" ref="bp.hsmService"/>-->	
		<property name="manageRtu" ref="manageRtu"/>
		<property name="timeoutAlarm"><value>1</value></property>
		<property name="minSize"><value>2</value></property>
		<property name="maxSize"><value>4</value></property>
	</bean>	
	
	<!-- ========================= 漏点补招接口客户端对象 ========================= -->			
<!--	<bean id="bp.rereadTask.client" class="cn.hexing.fk.clientmod.ClientModule"-->
<!--		parent="JSocket">-->
<!--		<property name="moduleType" value="rereadTaskClient"/>-->
<!--		<property name="name" value="rereadTaskClient"/>-->
<!--		<property name="hostIp"><value>${bp.rereadTask.client.hostIp}</value></property>-->
<!--		<property name="hostPort"><value>${bp.rereadTask.client.hostPort}</value></property>-->
<!--		<property name="bufLength" value="20480"/>-->
<!--		<property name="messageCreator" ref="messageCreator.Web"/>-->
<!--		<property name="timeout" value="2"/>-->
<!--		<property name="txfs" value="02"/>-->
<!--		<property name="heartInterval" value="10"/>-->
<!--		<property name="requestNum" value="500"/>-->
<!--		<property name="eventHandler" ref="webserver.event.hook"/>-->
<!--	</bean>-->
<!--	<bean id="bp.rereadTaskClientManage" class="cn.hexing.fk.bp.feclient.RereadTaskChannelManage">-->
<!--		<property name="client" ref="bp.rereadTask.client"/>-->
<!--	</bean>-->
	
	<!-- ========================= 批量保存服务对象 ========================= -->
	<!--
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>jdbc.properties</value>
				<value>application.properties</value>
			</list>
		</property>
	</bean>-->
	
	<bean id="propertyConfigurer" class="cn.hexing.fk.utils.EncryptPlaceholderConfigurer">
		<property name="encryptFileName" value="jdbc.properties"/>
		<property name="encryptPropNames">
			<list>
				<value>master.jdbc.username</value>
				<value>master.jdbc.password</value>
				<value>rz.jdbc.username</value>
				<value>rz.jdbc.password</value>
			</list>
		</property>
		<property name="locations">
			<list>
				<value>application.properties</value>
				<value>jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 业务处理器短表任务插入 -->	
	<bean id="bp.batchDao.insertTaskData" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="4500"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO SB_SJMXB(SJID,SJSJ,SJBH,SJZ,CT,PT)
				VALUES(:SJID,:SJSJ,:SJBH,:SJZ,:CT,:PT)
				]]>
			</value>
		</property>
	</bean>
		
	<!-- 业务处理器专变任务电量数据临时表插入 -->		
	<bean id="bp.batchDao.insertTaskDlsj" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="1000"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				
				VALUES(:SJID,:SJSJ,:JSSJ,:CT,:PT,:ZHBL,:BQBJ,:FXYGZ2,:FXYGZ3,:FXYGZ4,:ZXWGZ,:ZXWGZ1,:ZXWGZ2,:ZXWGZ3,:ZXWGZ4,:FXWGZ,:FXWGZ1,:FXWGZ2,:FXWGZ3,:FXWGZ4,:ZXYGZDXL,:ZXYGZDXLFSSJ,:ZXYGZDXL1,:ZXYGZDXL1FSSJ,:ZXYGZDXL2,:ZXYGZDXL2FSSJ,:ZXYGZDXL3,:ZXYGZDXL3FSSJ,:ZXYGZDXL4,:ZXYGZDXL4FSSJ,:FXYGZDXL,:FXYGZDXLFSSJ,:ZXWGZDXL,:ZXWGZDXLFSSJ,:ZXWGZDXL1,:ZXWGZDXL1FSSJ,:ZXWGZDXL2,:ZXWGZDXL2FSSJ,:ZXWGZDXL3,:ZXWGZDXL3FSSJ,:ZXWGZDXL4,:ZXWGZDXL4FSSJ,:FXWGZDXL,:FXWGZDXLFSSJ,:WGZXX1,:WGZXX2,:WGZXX3,:WGZXX4,:FXWGZXX1,:FXWGZXX2,:FXWGZXX3,:FXWGZXX4,:ZXYGZXL,:ZXYGZXLFSSJ,:ZXYGZXL1,:ZXYGZXL1FSSJ,:ZXYGZXL2,:ZXYGZXL2FSSJ,:ZXYGZXL3,:ZXYGZXL3FSSJ,:ZXYGZXL4,:ZXYGZXL4FSSJ,:ZXYGSZZXL,:ZXYGSZZXLFSSJ,:ZXYGSZZXL1,:ZXYGSZZXL1FSSJ,:ZXYGSZZXL2,:ZXYGSZZXL2FSSJ,:ZXYGSZZXL3,:ZXYGSZZXL3FSSJ,:ZXYGSZZXL4,:ZXYGSZZXL4FSSJ,:SYXLJGSJ,:XLZQS,:ZXYGLJZDXL,:ZXYGLJZDXL1,:ZXYGLJZDXL2,:ZXYGLJZDXL3,:ZXYGLJZDXL4,:ZJYCXLFWSJ,:XLFWCS,:ZJHGS,:ZXYGZ,:ZXYGZ1,:ZXYGZ2,:ZXYGZ3,:ZXYGZ4,:FXYGZ,:FXYGZ1,:WLYGZ,:WLYG1,:WLYG2,:WLYG3,:WLYG4,:JDYGZ,:JDYG1,:JDYG2,:JDYG3,:JDYG4)
			
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
			MERGE INTO SB_DLSJ t 
			USING (select sjid, sjsj, max(jssj) as jssj, max(ct) AS ct, max(pt) AS pt, max(zhbl) as zhbl, max(bqbj) AS bqbj,max(xgbj) AS xgbj,max(FXYGZ2) AS FXYGZ2,max(FXYGZ3) AS FXYGZ3,max(FXYGZ4) AS FXYGZ4,max(ZXWGZ) AS ZXWGZ,max(ZXWGZ1) AS ZXWGZ1,max(ZXWGZ2) AS ZXWGZ2,max(ZXWGZ3) AS ZXWGZ3,max(ZXWGZ4) AS ZXWGZ4,max(FXWGZ) AS FXWGZ,max(FXWGZ1) AS FXWGZ1,max(FXWGZ2) AS FXWGZ2,max(FXWGZ3) AS FXWGZ3,max(FXWGZ4) AS FXWGZ4,max(ZXYGZDXL) AS ZXYGZDXL,max(ZXYGZDXLFSSJ) AS ZXYGZDXLFSSJ,max(ZXYGZDXL1) AS ZXYGZDXL1,max(ZXYGZDXL1FSSJ) AS ZXYGZDXL1FSSJ,max(ZXYGZDXL2) AS ZXYGZDXL2,max(ZXYGZDXL2FSSJ) AS ZXYGZDXL2FSSJ,max(ZXYGZDXL3) AS ZXYGZDXL3,max(ZXYGZDXL3FSSJ) AS ZXYGZDXL3FSSJ,max(ZXYGZDXL4) AS ZXYGZDXL4,max(ZXYGZDXL4FSSJ) AS ZXYGZDXL4FSSJ,max(FXYGZDXL) AS FXYGZDXL,max(FXYGZDXLFSSJ) AS FXYGZDXLFSSJ,max(ZXWGZDXL) AS ZXWGZDXL,max(ZXWGZDXLFSSJ) AS ZXWGZDXLFSSJ,max(ZXWGZDXL1) AS ZXWGZDXL1,max(ZXWGZDXL1FSSJ) AS ZXWGZDXL1FSSJ,max(ZXWGZDXL2) AS ZXWGZDXL2,max(ZXWGZDXL2FSSJ) AS ZXWGZDXL2FSSJ,max(ZXWGZDXL3) AS ZXWGZDXL3,max(ZXWGZDXL3FSSJ) AS ZXWGZDXL3FSSJ,max(ZXWGZDXL4) AS ZXWGZDXL4,max(ZXWGZDXL4FSSJ) AS ZXWGZDXL4FSSJ,max(FXWGZDXL) AS FXWGZDXL,max(FXWGZDXLFSSJ) AS FXWGZDXLFSSJ,max(WGZXX1) AS WGZXX1,max(WGZXX2) AS WGZXX2,max(WGZXX3) AS WGZXX3,max(WGZXX4) AS WGZXX4,max(FXWGZXX1) AS FXWGZXX1,max(FXWGZXX2) AS FXWGZXX2,max(FXWGZXX3) AS FXWGZXX3,max(FXWGZXX4) AS FXWGZXX4,max(ZXYGZXL) AS ZXYGZXL,max(ZXYGZXLFSSJ) AS ZXYGZXLFSSJ,max(ZXYGZXL1) AS ZXYGZXL1,max(ZXYGZXL1FSSJ) AS ZXYGZXL1FSSJ,max(ZXYGZXL2) AS ZXYGZXL2,max(ZXYGZXL2FSSJ) AS ZXYGZXL2FSSJ,max(ZXYGZXL3) AS ZXYGZXL3,max(ZXYGZXL3FSSJ) AS ZXYGZXL3FSSJ,max(ZXYGZXL4) AS ZXYGZXL4,max(ZXYGZXL4FSSJ) AS ZXYGZXL4FSSJ,max(ZXYGSZZXL) AS ZXYGSZZXL,max(ZXYGSZZXLFSSJ) AS ZXYGSZZXLFSSJ,max(ZXYGSZZXL1) AS ZXYGSZZXL1,max(ZXYGSZZXL1FSSJ) AS ZXYGSZZXL1FSSJ,max(ZXYGSZZXL2) AS ZXYGSZZXL2,max(ZXYGSZZXL2FSSJ) AS ZXYGSZZXL2FSSJ,max(ZXYGSZZXL3) AS ZXYGSZZXL3,max(ZXYGSZZXL3FSSJ) AS ZXYGSZZXL3FSSJ,max(ZXYGSZZXL4) AS ZXYGSZZXL4,max(ZXYGSZZXL4FSSJ) AS ZXYGSZZXL4FSSJ,max(SYXLJGSJ) AS SYXLJGSJ,max(XLZQS) AS XLZQS,max(ZXYGLJZDXL) AS ZXYGLJZDXL,max(ZXYGLJZDXL1) AS ZXYGLJZDXL1,max(ZXYGLJZDXL2) AS ZXYGLJZDXL2,max(ZXYGLJZDXL3) AS ZXYGLJZDXL3,max(ZXYGLJZDXL4) AS ZXYGLJZDXL4,max(ZJYCXLFWSJ) AS ZJYCXLFWSJ,max(XLFWCS) AS XLFWCS,max(ZJHGS) AS ZJHGS,max(ZXYGZ) AS ZXYGZ,max(ZXYGZ1) AS ZXYGZ1,max(ZXYGZ2) AS ZXYGZ2,max(ZXYGZ3) AS ZXYGZ3,max(ZXYGZ4) AS ZXYGZ4,max(FXYGZ) AS FXYGZ,max(FXYGZ1) AS FXYGZ1,max(wlygz) AS WLYGZ,max(wlyg1) AS WLYG1,max(wlyg2) AS WLYG2,max(wlyg3) AS WLYG3,max(wlyg4) AS WLYG4,max(jdygz) AS JDYGZ,max(jdyg1) AS JDYG1,max(jdyg2) AS JDYG2,max(jdyg3) AS JDYG3,max(jdyg4) AS JDYG4
			from TEMP_SB_DLSJ group by sjid, sjsj) s 
			ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)WHEN MATCHED THEN 
			UPDATE SET t.jssj=nvl(s.jssj, sysdate), t.ct=s.ct, t.pt=s.pt, t.zhbl=s.zhbl, t.bqbj=s.bqbj, t.xgbj=s.xgbj, 
			t.FXYGZ2=nvl(s.FXYGZ2, t.FXYGZ2),t.FXYGZ3=nvl(s.FXYGZ3, t.FXYGZ3),t.FXYGZ4=nvl(s.FXYGZ4, t.FXYGZ4),t.ZXWGZ=nvl(s.ZXWGZ, t.ZXWGZ),t.ZXWGZ1=nvl(s.ZXWGZ1, t.ZXWGZ1),t.ZXWGZ2=nvl(s.ZXWGZ2, t.ZXWGZ2),t.ZXWGZ3=nvl(s.ZXWGZ3, t.ZXWGZ3),t.ZXWGZ4=nvl(s.ZXWGZ4, t.ZXWGZ4),t.FXWGZ=nvl(s.FXWGZ, t.FXWGZ),t.FXWGZ1=nvl(s.FXWGZ1, t.FXWGZ1),t.FXWGZ2=nvl(s.FXWGZ2, t.FXWGZ2),t.FXWGZ3=nvl(s.FXWGZ3, t.FXWGZ3),t.FXWGZ4=nvl(s.FXWGZ4, t.FXWGZ4),t.ZXYGZDXL=nvl(s.ZXYGZDXL, t.ZXYGZDXL),t.ZXYGZDXLFSSJ=NVL(TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXLFSSJ),t.ZXYGZDXL1=nvl(s.ZXYGZDXL1, t.ZXYGZDXL1),t.ZXYGZDXL1FSSJ=NVL(TO_DATE(S.ZXYGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL1FSSJ),t.ZXYGZDXL2=nvl(s.ZXYGZDXL2, t.ZXYGZDXL2),t.ZXYGZDXL2FSSJ=NVL(TO_DATE(S.ZXYGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL2FSSJ),t.ZXYGZDXL3=nvl(s.ZXYGZDXL3, t.ZXYGZDXL3),t.ZXYGZDXL3FSSJ=NVL(TO_DATE(S.ZXYGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL3FSSJ),t.ZXYGZDXL4=nvl(s.ZXYGZDXL4, t.ZXYGZDXL4),t.ZXYGZDXL4FSSJ=NVL(TO_DATE(S.ZXYGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL4FSSJ),t.FXYGZDXL=nvl(s.FXYGZDXL, t.FXYGZDXL),t.FXYGZDXLFSSJ=NVL(TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGZDXLFSSJ),t.ZXWGZDXL=nvl(s.ZXWGZDXL, t.ZXWGZDXL),t.ZXWGZDXLFSSJ=NVL(TO_DATE(S.ZXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXLFSSJ),t.ZXWGZDXL1=nvl(s.ZXWGZDXL1, t.ZXWGZDXL1),t.ZXWGZDXL1FSSJ=NVL(TO_DATE(S.ZXWGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL1FSSJ),t.ZXWGZDXL2=nvl(s.ZXWGZDXL2, t.ZXWGZDXL2),t.ZXWGZDXL2FSSJ=NVL(TO_DATE(S.ZXWGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL2FSSJ),t.ZXWGZDXL3=nvl(s.ZXWGZDXL3, t.ZXWGZDXL3),t.ZXWGZDXL3FSSJ=NVL(TO_DATE(S.ZXWGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL3FSSJ),t.ZXWGZDXL4=nvl(s.ZXWGZDXL4, t.ZXWGZDXL4),t.ZXWGZDXL4FSSJ=NVL(TO_DATE(S.ZXWGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL4FSSJ),t.FXWGZDXL=nvl(s.FXWGZDXL, t.FXWGZDXL),t.FXWGZDXLFSSJ=NVL(TO_DATE(S.FXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXWGZDXLFSSJ),t.WGZXX1=nvl(s.WGZXX1, t.WGZXX1),t.WGZXX2=nvl(s.WGZXX2, t.WGZXX2),t.WGZXX3=nvl(s.WGZXX3, t.WGZXX3),t.WGZXX4=nvl(s.WGZXX4, t.WGZXX4),t.FXWGZXX1=nvl(s.FXWGZXX1, t.FXWGZXX1),t.FXWGZXX2=nvl(s.FXWGZXX2, t.FXWGZXX2),t.FXWGZXX3=nvl(s.FXWGZXX3, t.FXWGZXX3),t.FXWGZXX4=nvl(s.FXWGZXX4, t.FXWGZXX4),t.ZXYGZXL=nvl(s.ZXYGZXL, t.ZXYGZXL),t.ZXYGZXLFSSJ=NVL(TO_DATE(S.ZXYGZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXLFSSJ),t.ZXYGZXL1=nvl(s.ZXYGZXL1, t.ZXYGZXL1),t.ZXYGZXL1FSSJ=NVL(TO_DATE(S.ZXYGZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL1FSSJ),t.ZXYGZXL2=nvl(s.ZXYGZXL2, t.ZXYGZXL2),t.ZXYGZXL2FSSJ=NVL(TO_DATE(S.ZXYGZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL2FSSJ),t.ZXYGZXL3=nvl(s.ZXYGZXL3, t.ZXYGZXL3),t.ZXYGZXL3FSSJ=NVL(TO_DATE(S.ZXYGZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL3FSSJ),t.ZXYGZXL4=nvl(s.ZXYGZXL4, t.ZXYGZXL4),t.ZXYGZXL4FSSJ=NVL(TO_DATE(S.ZXYGZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL4FSSJ),t.ZXYGSZZXL=nvl(s.ZXYGSZZXL, t.ZXYGSZZXL),t.ZXYGSZZXLFSSJ=NVL(TO_DATE(S.ZXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXLFSSJ),t.ZXYGSZZXL1=nvl(s.ZXYGSZZXL1, t.ZXYGSZZXL1),t.ZXYGSZZXL1FSSJ=NVL(TO_DATE(S.ZXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL1FSSJ),t.ZXYGSZZXL2=nvl(s.ZXYGSZZXL2, t.ZXYGSZZXL2),t.ZXYGSZZXL2FSSJ=NVL(TO_DATE(S.ZXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL2FSSJ),t.ZXYGSZZXL3=nvl(s.ZXYGSZZXL3, t.ZXYGSZZXL3),t.ZXYGSZZXL3FSSJ=NVL(TO_DATE(S.ZXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL3FSSJ),t.ZXYGSZZXL4=nvl(s.ZXYGSZZXL4, t.ZXYGSZZXL4),t.ZXYGSZZXL4FSSJ=NVL(TO_DATE(S.ZXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL4FSSJ),t.SYXLJGSJ=NVL(TO_DATE(S.SYXLJGSJ,'YYYY-MM-DD HH24:MI:SS'),T.SYXLJGSJ),t.XLZQS=nvl(s.XLZQS, t.XLZQS),t.ZXYGLJZDXL=nvl(s.ZXYGLJZDXL, t.ZXYGLJZDXL),t.ZXYGLJZDXL1=nvl(s.ZXYGLJZDXL1, t.ZXYGLJZDXL1),t.ZXYGLJZDXL2=nvl(s.ZXYGLJZDXL2, t.ZXYGLJZDXL2),t.ZXYGLJZDXL3=nvl(s.ZXYGLJZDXL3, t.ZXYGLJZDXL3),t.ZXYGLJZDXL4=nvl(s.ZXYGLJZDXL4, t.ZXYGLJZDXL4),t.ZJYCXLFWSJ=NVL(TO_DATE(S.ZJYCXLFWSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZJYCXLFWSJ),t.XLFWCS=nvl(s.XLFWCS, t.XLFWCS),t.ZJHGS=nvl(s.ZJHGS, t.ZJHGS),t.ZXYGZ=nvl(s.ZXYGZ, t.ZXYGZ),t.ZXYGZ1=nvl(s.ZXYGZ1, t.ZXYGZ1),t.ZXYGZ2=nvl(s.ZXYGZ2, t.ZXYGZ2),t.ZXYGZ3=nvl(s.ZXYGZ3, t.ZXYGZ3),t.ZXYGZ4=nvl(s.ZXYGZ4, t.ZXYGZ4),t.FXYGZ=nvl(s.FXYGZ, t.FXYGZ),t.FXYGZ1=nvl(s.FXYGZ1, t.FXYGZ1),t.WLYGZ=nvl(s.WLYGZ,t.WLYGZ),t.WLYG1=nvl(s.WLYG1,t.WLYG1),t.WLYG2=nvl(s.WLYG2,t.WLYG2),t.WLYG3=nvl(s.WLYG3,t.WLYG3),t.WLYG4=nvl(s.WLYG4,t.WLYG4),t.JDYGZ=nvl(s.JDYGZ,t.JDYGZ),t.JDYG1=nvl(s.JDYG1,t.JDYG1),t.JDYG2=nvl(s.JDYG2,t.JDYG2),t.JDYG3=nvl(s.JDYG3,t.JDYG3),t.JDYG4=nvl(s.JDYG4,t.JDYG4)
			 WHEN NOT MATCHED THEN
			INSERT (sjid, sjsj, jssj, ct, pt, zhbl, bqbj,xgbj ,FXYGZ2,FXYGZ3,FXYGZ4,ZXWGZ,ZXWGZ1,ZXWGZ2,ZXWGZ3,ZXWGZ4,FXWGZ,FXWGZ1,FXWGZ2,FXWGZ3,FXWGZ4,ZXYGZDXL,ZXYGZDXLFSSJ,ZXYGZDXL1,ZXYGZDXL1FSSJ,ZXYGZDXL2,ZXYGZDXL2FSSJ,ZXYGZDXL3,ZXYGZDXL3FSSJ,ZXYGZDXL4,ZXYGZDXL4FSSJ,FXYGZDXL,FXYGZDXLFSSJ,ZXWGZDXL,ZXWGZDXLFSSJ,ZXWGZDXL1,ZXWGZDXL1FSSJ,ZXWGZDXL2,ZXWGZDXL2FSSJ,ZXWGZDXL3,ZXWGZDXL3FSSJ,ZXWGZDXL4,ZXWGZDXL4FSSJ,FXWGZDXL,FXWGZDXLFSSJ,WGZXX1,WGZXX2,WGZXX3,WGZXX4,FXWGZXX1,FXWGZXX2,FXWGZXX3,FXWGZXX4,ZXYGZXL,ZXYGZXLFSSJ,ZXYGZXL1,ZXYGZXL1FSSJ,ZXYGZXL2,ZXYGZXL2FSSJ,ZXYGZXL3,ZXYGZXL3FSSJ,ZXYGZXL4,ZXYGZXL4FSSJ,ZXYGSZZXL,ZXYGSZZXLFSSJ,ZXYGSZZXL1,ZXYGSZZXL1FSSJ,ZXYGSZZXL2,ZXYGSZZXL2FSSJ,ZXYGSZZXL3,ZXYGSZZXL3FSSJ,ZXYGSZZXL4,ZXYGSZZXL4FSSJ,SYXLJGSJ,XLZQS,ZXYGLJZDXL,ZXYGLJZDXL1,ZXYGLJZDXL2,ZXYGLJZDXL3,ZXYGLJZDXL4,ZJYCXLFWSJ,XLFWCS,ZJHGS,ZXYGZ,ZXYGZ1,ZXYGZ2,ZXYGZ3,ZXYGZ4,FXYGZ,FXYGZ1,WLYGZ,WLYG1,WLYG2,WLYG3,WLYG4,JDYGZ,JDYG1,JDYG2,JDYG3,JDYG4)VALUES (s.sjid, s.sjsj, nvl(s.jssj, sysdate), s.ct, s.pt, s.zhbl, s.bqbj,0 ,s.FXYGZ2,s.FXYGZ3,s.FXYGZ4,s.ZXWGZ,s.ZXWGZ1,s.ZXWGZ2,s.ZXWGZ3,s.ZXWGZ4,s.FXWGZ,s.FXWGZ1,s.FXWGZ2,s.FXWGZ3,s.FXWGZ4,s.ZXYGZDXL,TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL1,TO_DATE(S.ZXYGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL2,TO_DATE(S.ZXYGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL3,TO_DATE(S.ZXYGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL4,TO_DATE(S.ZXYGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGZDXL,TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL,TO_DATE(S.ZXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL1,TO_DATE(S.ZXWGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL2,TO_DATE(S.ZXWGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL3,TO_DATE(S.ZXWGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL4,TO_DATE(S.ZXWGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXWGZDXL,TO_DATE(S.FXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.WGZXX1,s.WGZXX2,s.WGZXX3,s.WGZXX4,s.FXWGZXX1,s.FXWGZXX2,s.FXWGZXX3,s.FXWGZXX4,s.ZXYGZXL,TO_DATE(S.ZXYGZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL1,TO_DATE(S.ZXYGZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL2,TO_DATE(S.ZXYGZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL3,TO_DATE(S.ZXYGZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL4,TO_DATE(S.ZXYGZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL,TO_DATE(S.ZXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL1,TO_DATE(S.ZXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL2,TO_DATE(S.ZXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL3,TO_DATE(S.ZXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL4,TO_DATE(S.ZXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),TO_DATE(S.SYXLJGSJ,'YYYY-MM-DD HH24:MI:SS'),s.XLZQS,s.ZXYGLJZDXL,s.ZXYGLJZDXL1,s.ZXYGLJZDXL2,s.ZXYGLJZDXL3,s.ZXYGLJZDXL4,TO_DATE(S.ZJYCXLFWSJ,'YYYY-MM-DD HH24:MI:SS'),s.XLFWCS,s.ZJHGS,s.ZXYGZ,s.ZXYGZ1,s.ZXYGZ2,s.ZXYGZ3,s.ZXYGZ4,s.FXYGZ,s.FXYGZ1,s.WLYGZ,s.WLYG1,s.WLYG2,s.WLYG3,s.WLYG4,s.JDYGZ,s.JDYG1,s.JDYG2,s.JDYG3,s.JDYG4)
			LOG ERRORS INTO SB_DLSJ_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
				]]>
			</value>
		</property>
	</bean>
		<!-- 业务处理器月冻结数据临时表插入 -->
	<bean id="bp.batchDao.insertFreezeMonth" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
	<property name="key" value="1002"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
			 	INSERT INTO TEMP_SB_DLSJ_YDJ(SJID,SJSJ,JSSJ,CT,PT,ZHBL,BQBJ,ZXYGZ,ZXYGZ1,ZXYGZ2,ZXYGZ3,ZXYGZ4,FXYGZ,FXYGZ1,FXYGZ2,FXYGZ3,FXYGZ4,ZXWGZ,ZXWGZ1,ZXWGZ2,ZXWGZ3,ZXWGZ4,FXWGZ,FXWGZ1,FXWGZ2,FXWGZ3,FXWGZ4,ZXYGZDXL,ZXYGZDXLFSSJ,ZXYGZDXL1,ZXYGZDXL1FSSJ,ZXYGZDXL2,ZXYGZDXL2FSSJ,ZXYGZDXL3,ZXYGZDXL3FSSJ,ZXYGZDXL4,ZXYGZDXL4FSSJ,FXYGZDXL,FXYGZDXLFSSJ,ZXWGZDXL,ZXWGZDXLFSSJ,ZXWGZDXL1,ZXWGZDXL1FSSJ,ZXWGZDXL2,ZXWGZDXL2FSSJ,ZXWGZDXL3,ZXWGZDXL3FSSJ,ZXWGZDXL4,ZXWGZDXL4FSSJ,FXWGZDXL,FXWGZDXLFSSJ,WGZXX1,WGZXX2,WGZXX3,WGZXX4,FXWGZXX1,FXWGZXX2,FXWGZXX3,FXWGZXX4,ZXYGZXL,ZXYGZXLFSSJ,ZXYGZXL1,ZXYGZXL1FSSJ,ZXYGZXL2,ZXYGZXL2FSSJ,ZXYGZXL3,ZXYGZXL3FSSJ,ZXYGZXL4,ZXYGZXL4FSSJ,ZXYGSZZXL,ZXYGSZZXLFSSJ,ZXYGSZZXL1,ZXYGSZZXL1FSSJ,ZXYGSZZXL2,ZXYGSZZXL2FSSJ,ZXYGSZZXL3,ZXYGSZZXL3FSSJ,ZXYGSZZXL4,ZXYGSZZXL4FSSJ,SYXLJGSJ,XLZQS,ZXYGLJZDXL,ZXYGLJZDXL1,ZXYGLJZDXL2,ZXYGLJZDXL3,ZXYGLJZDXL4,ZJYCXLFWSJ,XLFWCS,ZJHGS,YPJGLYS,YPJGLYS1,YPJGLYS2,YPJGLYS3,YPJGLYS4,FXYGSZZXL,FXYGSZZXLFSSJ,FXYGSZZXL1,FXYGSZZXL1FSSJ,FXYGSZZXL2,FXYGSZZXL2FSSJ,FXYGSZZXL3,FXYGSZZXL3FSSJ,FXYGSZZXL4,FXYGSZZXL4FSSJ,UFERDL1,UFERDL2,UFERDL3,UFERDL4,DMCRXL1,DMCRXL2,DMCRXL3,DMCRXL4,DBYE,WLYGZ,WLYG1,WLYG2,WLYG3,WLYG4,JDYGZ,JDYG1,JDYG2,JDYG3,JDYG4)
				VALUES(:SJID,:SJSJ,:JSSJ,:CT,:PT,:ZHBL,:BQBJ,:ZXYGZ,:ZXYGZ1,:ZXYGZ2,:ZXYGZ3,:ZXYGZ4,:FXYGZ,:FXYGZ1,:FXYGZ2,:FXYGZ3,:FXYGZ4,:ZXWGZ,:ZXWGZ1,:ZXWGZ2,:ZXWGZ3,:ZXWGZ4,:FXWGZ,:FXWGZ1,:FXWGZ2,:FXWGZ3,:FXWGZ4,:ZXYGZDXL,:ZXYGZDXLFSSJ,:ZXYGZDXL1,:ZXYGZDXL1FSSJ,:ZXYGZDXL2,:ZXYGZDXL2FSSJ,:ZXYGZDXL3,:ZXYGZDXL3FSSJ,:ZXYGZDXL4,:ZXYGZDXL4FSSJ,:FXYGZDXL,:FXYGZDXLFSSJ,:ZXWGZDXL,:ZXWGZDXLFSSJ,:ZXWGZDXL1,:ZXWGZDXL1FSSJ,:ZXWGZDXL2,:ZXWGZDXL2FSSJ,:ZXWGZDXL3,:ZXWGZDXL3FSSJ,:ZXWGZDXL4,:ZXWGZDXL4FSSJ,:FXWGZDXL,:FXWGZDXLFSSJ,:WGZXX1,:WGZXX2,:WGZXX3,:WGZXX4,:FXWGZXX1,:FXWGZXX2,:FXWGZXX3,:FXWGZXX4,:ZXYGZXL,:ZXYGZXLFSSJ,:ZXYGZXL1,:ZXYGZXL1FSSJ,:ZXYGZXL2,:ZXYGZXL2FSSJ,:ZXYGZXL3,:ZXYGZXL3FSSJ,:ZXYGZXL4,:ZXYGZXL4FSSJ,:ZXYGSZZXL,:ZXYGSZZXLFSSJ,:ZXYGSZZXL1,:ZXYGSZZXL1FSSJ,:ZXYGSZZXL2,:ZXYGSZZXL2FSSJ,:ZXYGSZZXL3,:ZXYGSZZXL3FSSJ,:ZXYGSZZXL4,:ZXYGSZZXL4FSSJ,:SYXLJGSJ,:XLZQS,:ZXYGLJZDXL,:ZXYGLJZDXL1,:ZXYGLJZDXL2,:ZXYGLJZDXL3,:ZXYGLJZDXL4,:ZJYCXLFWSJ,:XLFWCS,:ZJHGS,:YPJGLYS,:YPJGLYS1,:YPJGLYS2,:YPJGLYS3,:YPJGLYS4,:FXYGSZZXL,:FXYGSZZXLFSSJ,:FXYGSZZXL1,:FXYGSZZXL1FSSJ,:FXYGSZZXL2,:FXYGSZZXL2FSSJ,:FXYGSZZXL3,:FXYGSZZXL3FSSJ,:FXYGSZZXL4,:FXYGSZZXL4FSSJ,:UFERDL1,:UFERDL2,:UFERDL3,:UFERDL4,:DMCRXL1,:DMCRXL2,:DMCRXL3,:DMCRXL4,:DBYE,:WLYGZ,:WLYG1,:WLYG2,:WLYG3,:WLYG4,:JDYGZ,:JDYG1,:JDYG2,:JDYG3,:JDYG4)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
				
				MERGE INTO SB_DLSJ_YDJ t 
				USING (select sjid, sjsj, max(jssj) as jssj, max(ct) AS ct, max(pt) AS pt, max(zhbl) as zhbl, max(bqbj) AS bqbj,max(xgbj) AS xgbj,max(ZXYGZ) AS ZXYGZ,max(ZXYGZ1) AS ZXYGZ1,max(ZXYGZ2) AS ZXYGZ2,max(ZXYGZ3) AS ZXYGZ3,max(ZXYGZ4) AS ZXYGZ4,max(FXYGZ) AS FXYGZ,max(FXYGZ1) AS FXYGZ1,max(FXYGZ2) AS FXYGZ2,max(FXYGZ3) AS FXYGZ3,max(FXYGZ4) AS FXYGZ4,max(ZXWGZ) AS ZXWGZ,max(ZXWGZ1) AS ZXWGZ1,max(ZXWGZ2) AS ZXWGZ2,max(ZXWGZ3) AS ZXWGZ3,max(ZXWGZ4) AS ZXWGZ4,max(FXWGZ) AS FXWGZ,max(FXWGZ1) AS FXWGZ1,max(FXWGZ2) AS FXWGZ2,max(FXWGZ3) AS FXWGZ3,max(FXWGZ4) AS FXWGZ4,max(ZXYGZDXL) AS ZXYGZDXL,max(ZXYGZDXLFSSJ) AS ZXYGZDXLFSSJ,max(ZXYGZDXL1) AS ZXYGZDXL1,max(ZXYGZDXL1FSSJ) AS ZXYGZDXL1FSSJ,max(ZXYGZDXL2) AS ZXYGZDXL2,max(ZXYGZDXL2FSSJ) AS ZXYGZDXL2FSSJ,max(ZXYGZDXL3) AS ZXYGZDXL3,max(ZXYGZDXL3FSSJ) AS ZXYGZDXL3FSSJ,max(ZXYGZDXL4) AS ZXYGZDXL4,max(ZXYGZDXL4FSSJ) AS ZXYGZDXL4FSSJ,max(FXYGZDXL) AS FXYGZDXL,max(FXYGZDXLFSSJ) AS FXYGZDXLFSSJ,max(ZXWGZDXL) AS ZXWGZDXL,max(ZXWGZDXLFSSJ) AS ZXWGZDXLFSSJ,max(ZXWGZDXL1) AS ZXWGZDXL1,max(ZXWGZDXL1FSSJ) AS ZXWGZDXL1FSSJ,max(ZXWGZDXL2) AS ZXWGZDXL2,max(ZXWGZDXL2FSSJ) AS ZXWGZDXL2FSSJ,max(ZXWGZDXL3) AS ZXWGZDXL3,max(ZXWGZDXL3FSSJ) AS ZXWGZDXL3FSSJ,max(ZXWGZDXL4) AS ZXWGZDXL4,max(ZXWGZDXL4FSSJ) AS ZXWGZDXL4FSSJ,max(FXWGZDXL) AS FXWGZDXL,max(FXWGZDXLFSSJ) AS FXWGZDXLFSSJ,max(WGZXX1) AS WGZXX1,max(WGZXX2) AS WGZXX2,max(WGZXX3) AS WGZXX3,max(WGZXX4) AS WGZXX4,max(FXWGZXX1) AS FXWGZXX1,max(FXWGZXX2) AS FXWGZXX2,max(FXWGZXX3) AS FXWGZXX3,max(FXWGZXX4) AS FXWGZXX4,max(ZXYGZXL) AS ZXYGZXL,max(ZXYGZXLFSSJ) AS ZXYGZXLFSSJ,max(ZXYGZXL1) AS ZXYGZXL1,max(ZXYGZXL1FSSJ) AS ZXYGZXL1FSSJ,max(ZXYGZXL2) AS ZXYGZXL2,max(ZXYGZXL2FSSJ) AS ZXYGZXL2FSSJ,max(ZXYGZXL3) AS ZXYGZXL3,max(ZXYGZXL3FSSJ) AS ZXYGZXL3FSSJ,max(ZXYGZXL4) AS ZXYGZXL4,max(ZXYGZXL4FSSJ) AS ZXYGZXL4FSSJ,max(ZXYGSZZXL) AS ZXYGSZZXL,max(ZXYGSZZXLFSSJ) AS ZXYGSZZXLFSSJ,max(ZXYGSZZXL1) AS ZXYGSZZXL1,max(ZXYGSZZXL1FSSJ) AS ZXYGSZZXL1FSSJ,max(ZXYGSZZXL2) AS ZXYGSZZXL2,max(ZXYGSZZXL2FSSJ) AS ZXYGSZZXL2FSSJ,max(ZXYGSZZXL3) AS ZXYGSZZXL3,max(ZXYGSZZXL3FSSJ) AS ZXYGSZZXL3FSSJ,max(ZXYGSZZXL4) AS ZXYGSZZXL4,max(ZXYGSZZXL4FSSJ) AS ZXYGSZZXL4FSSJ,max(SYXLJGSJ) AS SYXLJGSJ,max(XLZQS) AS XLZQS,max(ZXYGLJZDXL) AS ZXYGLJZDXL,max(ZXYGLJZDXL1) AS ZXYGLJZDXL1,max(ZXYGLJZDXL2) AS ZXYGLJZDXL2,max(ZXYGLJZDXL3) AS ZXYGLJZDXL3,max(ZXYGLJZDXL4) AS ZXYGLJZDXL4,max(ZJYCXLFWSJ) AS ZJYCXLFWSJ,max(XLFWCS) AS XLFWCS,max(ZJHGS) AS ZJHGS,max(YPJGLYS) AS YPJGLYS,max(YPJGLYS1) AS YPJGLYS1,max(YPJGLYS2) AS YPJGLYS2,max(YPJGLYS3) AS YPJGLYS3,max(YPJGLYS4) AS YPJGLYS4,max(FXYGSZZXL) AS FXYGSZZXL,max(FXYGSZZXLFSSJ) AS FXYGSZZXLFSSJ,max(FXYGSZZXL1) AS FXYGSZZXL1,max(FXYGSZZXL1FSSJ) AS FXYGSZZXL1FSSJ,max(FXYGSZZXL2) AS FXYGSZZXL2,max(FXYGSZZXL2FSSJ) AS FXYGSZZXL2FSSJ,max(FXYGSZZXL3) AS FXYGSZZXL3,max(FXYGSZZXL3FSSJ) AS FXYGSZZXL3FSSJ,max(FXYGSZZXL4) AS FXYGSZZXL4,max(FXYGSZZXL4FSSJ) AS FXYGSZZXL4FSSJ,max(UFERDL1) AS UFERDL1,max(UFERDL2) AS UFERDL2,max(UFERDL3) AS UFERDL3,max(UFERDL4) AS UFERDL4,max(DMCRXL1) AS DMCRXL1,max(DMCRXL2) AS DMCRXL2,max(DMCRXL3) AS DMCRXL3,max(DMCRXL4) AS DMCRXL4,max(DBYE) AS DBYE,max(wlygz) AS WLYGZ,max(wlyg1) AS WLYG1,max(wlyg2) AS WLYG2,max(wlyg3) AS WLYG3,max(wlyg4) AS WLYG4,max(jdygz) AS JDYGZ,max(jdyg1) AS JDYG1,max(jdyg2) AS JDYG2,max(jdyg3) AS JDYG3,max(jdyg4) AS JDYG4
				from TEMP_SB_DLSJ_YDJ group by sjid, sjsj) s 
				ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)WHEN MATCHED THEN 
				UPDATE SET t.jssj=nvl(s.jssj, sysdate), t.ct=s.ct, t.pt=s.pt, t.zhbl=s.zhbl, t.bqbj=s.bqbj, t.xgbj=s.xgbj, 
				t.ZXYGZ=nvl(s.ZXYGZ, t.ZXYGZ),t.ZXYGZ1=nvl(s.ZXYGZ1, t.ZXYGZ1),t.ZXYGZ2=nvl(s.ZXYGZ2, t.ZXYGZ2),t.ZXYGZ3=nvl(s.ZXYGZ3, t.ZXYGZ3),t.ZXYGZ4=nvl(s.ZXYGZ4, t.ZXYGZ4),t.FXYGZ=nvl(s.FXYGZ, t.FXYGZ),t.FXYGZ1=nvl(s.FXYGZ1, t.FXYGZ1),t.FXYGZ2=nvl(s.FXYGZ2, t.FXYGZ2),t.FXYGZ3=nvl(s.FXYGZ3, t.FXYGZ3),t.FXYGZ4=nvl(s.FXYGZ4, t.FXYGZ4),t.ZXWGZ=nvl(s.ZXWGZ, t.ZXWGZ),t.ZXWGZ1=nvl(s.ZXWGZ1, t.ZXWGZ1),t.ZXWGZ2=nvl(s.ZXWGZ2, t.ZXWGZ2),t.ZXWGZ3=nvl(s.ZXWGZ3, t.ZXWGZ3),t.ZXWGZ4=nvl(s.ZXWGZ4, t.ZXWGZ4),t.FXWGZ=nvl(s.FXWGZ, t.FXWGZ),t.FXWGZ1=nvl(s.FXWGZ1, t.FXWGZ1),t.FXWGZ2=nvl(s.FXWGZ2, t.FXWGZ2),t.FXWGZ3=nvl(s.FXWGZ3, t.FXWGZ3),t.FXWGZ4=nvl(s.FXWGZ4, t.FXWGZ4),t.ZXYGZDXL=nvl(s.ZXYGZDXL, t.ZXYGZDXL),t.ZXYGZDXLFSSJ=NVL(TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXLFSSJ),t.ZXYGZDXL1=nvl(s.ZXYGZDXL1, t.ZXYGZDXL1),t.ZXYGZDXL1FSSJ=NVL(TO_DATE(S.ZXYGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL1FSSJ),t.ZXYGZDXL2=nvl(s.ZXYGZDXL2, t.ZXYGZDXL2),t.ZXYGZDXL2FSSJ=NVL(TO_DATE(S.ZXYGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL2FSSJ),t.ZXYGZDXL3=nvl(s.ZXYGZDXL3, t.ZXYGZDXL3),t.ZXYGZDXL3FSSJ=NVL(TO_DATE(S.ZXYGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL3FSSJ),t.ZXYGZDXL4=nvl(s.ZXYGZDXL4, t.ZXYGZDXL4),t.ZXYGZDXL4FSSJ=NVL(TO_DATE(S.ZXYGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZDXL4FSSJ),t.FXYGZDXL=nvl(s.FXYGZDXL, t.FXYGZDXL),t.FXYGZDXLFSSJ=NVL(TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGZDXLFSSJ),t.ZXWGZDXL=nvl(s.ZXWGZDXL, t.ZXWGZDXL),t.ZXWGZDXLFSSJ=NVL(TO_DATE(S.ZXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXLFSSJ),t.ZXWGZDXL1=nvl(s.ZXWGZDXL1, t.ZXWGZDXL1),t.ZXWGZDXL1FSSJ=NVL(TO_DATE(S.ZXWGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL1FSSJ),t.ZXWGZDXL2=nvl(s.ZXWGZDXL2, t.ZXWGZDXL2),t.ZXWGZDXL2FSSJ=NVL(TO_DATE(S.ZXWGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL2FSSJ),t.ZXWGZDXL3=nvl(s.ZXWGZDXL3, t.ZXWGZDXL3),t.ZXWGZDXL3FSSJ=NVL(TO_DATE(S.ZXWGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL3FSSJ),t.ZXWGZDXL4=nvl(s.ZXWGZDXL4, t.ZXWGZDXL4),t.ZXWGZDXL4FSSJ=NVL(TO_DATE(S.ZXWGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXWGZDXL4FSSJ),t.FXWGZDXL=nvl(s.FXWGZDXL, t.FXWGZDXL),t.FXWGZDXLFSSJ=NVL(TO_DATE(S.FXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXWGZDXLFSSJ),t.WGZXX1=nvl(s.WGZXX1, t.WGZXX1),t.WGZXX2=nvl(s.WGZXX2, t.WGZXX2),t.WGZXX3=nvl(s.WGZXX3, t.WGZXX3),t.WGZXX4=nvl(s.WGZXX4, t.WGZXX4),t.FXWGZXX1=nvl(s.FXWGZXX1, t.FXWGZXX1),t.FXWGZXX2=nvl(s.FXWGZXX2, t.FXWGZXX2),t.FXWGZXX3=nvl(s.FXWGZXX3, t.FXWGZXX3),t.FXWGZXX4=nvl(s.FXWGZXX4, t.FXWGZXX4),t.ZXYGZXL=nvl(s.ZXYGZXL, t.ZXYGZXL),t.ZXYGZXLFSSJ=NVL(TO_DATE(S.ZXYGZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXLFSSJ),t.ZXYGZXL1=nvl(s.ZXYGZXL1, t.ZXYGZXL1),t.ZXYGZXL1FSSJ=NVL(TO_DATE(S.ZXYGZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL1FSSJ),t.ZXYGZXL2=nvl(s.ZXYGZXL2, t.ZXYGZXL2),t.ZXYGZXL2FSSJ=NVL(TO_DATE(S.ZXYGZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL2FSSJ),t.ZXYGZXL3=nvl(s.ZXYGZXL3, t.ZXYGZXL3),t.ZXYGZXL3FSSJ=NVL(TO_DATE(S.ZXYGZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL3FSSJ),t.ZXYGZXL4=nvl(s.ZXYGZXL4, t.ZXYGZXL4),t.ZXYGZXL4FSSJ=NVL(TO_DATE(S.ZXYGZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGZXL4FSSJ),t.ZXYGSZZXL=nvl(s.ZXYGSZZXL, t.ZXYGSZZXL),t.ZXYGSZZXLFSSJ=NVL(TO_DATE(S.ZXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXLFSSJ),t.ZXYGSZZXL1=nvl(s.ZXYGSZZXL1, t.ZXYGSZZXL1),t.ZXYGSZZXL1FSSJ=NVL(TO_DATE(S.ZXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL1FSSJ),t.ZXYGSZZXL2=nvl(s.ZXYGSZZXL2, t.ZXYGSZZXL2),t.ZXYGSZZXL2FSSJ=NVL(TO_DATE(S.ZXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL2FSSJ),t.ZXYGSZZXL3=nvl(s.ZXYGSZZXL3, t.ZXYGSZZXL3),t.ZXYGSZZXL3FSSJ=NVL(TO_DATE(S.ZXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL3FSSJ),t.ZXYGSZZXL4=nvl(s.ZXYGSZZXL4, t.ZXYGSZZXL4),t.ZXYGSZZXL4FSSJ=NVL(TO_DATE(S.ZXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZXYGSZZXL4FSSJ),t.SYXLJGSJ=nvl(s.SYXLJGSJ, t.SYXLJGSJ),t.XLZQS=nvl(s.XLZQS, t.XLZQS),t.ZXYGLJZDXL=nvl(s.ZXYGLJZDXL, t.ZXYGLJZDXL),t.ZXYGLJZDXL1=nvl(s.ZXYGLJZDXL1, t.ZXYGLJZDXL1),t.ZXYGLJZDXL2=nvl(s.ZXYGLJZDXL2, t.ZXYGLJZDXL2),t.ZXYGLJZDXL3=nvl(s.ZXYGLJZDXL3, t.ZXYGLJZDXL3),t.ZXYGLJZDXL4=nvl(s.ZXYGLJZDXL4, t.ZXYGLJZDXL4),t.ZJYCXLFWSJ=NVL(TO_DATE(S.ZJYCXLFWSJ,'YYYY-MM-DD HH24:MI:SS'),T.ZJYCXLFWSJ),t.XLFWCS=nvl(s.XLFWCS, t.XLFWCS),t.ZJHGS=nvl(s.ZJHGS, t.ZJHGS),t.YPJGLYS=nvl(s.YPJGLYS, t.YPJGLYS),t.YPJGLYS1=nvl(s.YPJGLYS1, t.YPJGLYS1),t.YPJGLYS2=nvl(s.YPJGLYS2, t.YPJGLYS2),t.YPJGLYS3=nvl(s.YPJGLYS3, t.YPJGLYS3),t.YPJGLYS4=nvl(s.YPJGLYS4, t.YPJGLYS4),t.FXYGSZZXL=nvl(s.FXYGSZZXL, t.FXYGSZZXL),t.FXYGSZZXLFSSJ=NVL(TO_DATE(S.FXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGSZZXLFSSJ),t.FXYGSZZXL1=nvl(s.FXYGSZZXL1, t.FXYGSZZXL1),t.FXYGSZZXL1FSSJ=NVL(TO_DATE(S.FXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGSZZXL1FSSJ),t.FXYGSZZXL2=nvl(s.FXYGSZZXL2, t.FXYGSZZXL2),t.FXYGSZZXL2FSSJ=NVL(TO_DATE(S.FXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGSZZXL2FSSJ),t.FXYGSZZXL3=nvl(s.FXYGSZZXL3, t.FXYGSZZXL3),t.FXYGSZZXL3FSSJ=NVL(TO_DATE(S.FXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGSZZXL3FSSJ),t.FXYGSZZXL4=nvl(s.FXYGSZZXL4, t.FXYGSZZXL4),t.FXYGSZZXL4FSSJ=NVL(TO_DATE(S.FXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),T.FXYGSZZXL4FSSJ),t.UFERDL1=nvl(s.UFERDL1, t.UFERDL1),t.UFERDL2=nvl(s.UFERDL2, t.UFERDL2),t.UFERDL3=nvl(s.UFERDL3, t.UFERDL3),t.UFERDL4=nvl(s.UFERDL4, t.UFERDL4),t.DMCRXL1=nvl(s.DMCRXL1, t.DMCRXL1),t.DMCRXL2=nvl(s.DMCRXL2, t.DMCRXL2),t.DMCRXL3=nvl(s.DMCRXL3, t.DMCRXL3),t.DMCRXL4=nvl(s.DMCRXL4, t.DMCRXL4),t.DBYE=nvl(s.DBYE, t.DBYE),t.WLYGZ=nvl(s.WLYGZ,t.WLYGZ),t.WLYG1=nvl(s.WLYG1,t.WLYG1),t.WLYG2=nvl(s.WLYG2,t.WLYG2),t.WLYG3=nvl(s.WLYG3,t.WLYG3),t.WLYG4=nvl(s.WLYG4,t.WLYG4),t.JDYGZ=nvl(s.JDYGZ,t.JDYGZ),t.JDYG1=nvl(s.JDYG1,t.JDYG1),t.JDYG2=nvl(s.JDYG2,t.JDYG2),t.JDYG3=nvl(s.JDYG3,t.JDYG3),t.JDYG4=nvl(s.JDYG4,t.JDYG4)
				 WHEN NOT MATCHED THEN
				INSERT (sjid, sjsj, jssj, ct, pt, zhbl, bqbj,xgbj ,ZXYGZ,ZXYGZ1,ZXYGZ2,ZXYGZ3,ZXYGZ4,FXYGZ,FXYGZ1,FXYGZ2,FXYGZ3,FXYGZ4,ZXWGZ,ZXWGZ1,ZXWGZ2,ZXWGZ3,ZXWGZ4,FXWGZ,FXWGZ1,FXWGZ2,FXWGZ3,FXWGZ4,ZXYGZDXL,ZXYGZDXLFSSJ,ZXYGZDXL1,ZXYGZDXL1FSSJ,ZXYGZDXL2,ZXYGZDXL2FSSJ,ZXYGZDXL3,ZXYGZDXL3FSSJ,ZXYGZDXL4,ZXYGZDXL4FSSJ,FXYGZDXL,FXYGZDXLFSSJ,ZXWGZDXL,ZXWGZDXLFSSJ,ZXWGZDXL1,ZXWGZDXL1FSSJ,ZXWGZDXL2,ZXWGZDXL2FSSJ,ZXWGZDXL3,ZXWGZDXL3FSSJ,ZXWGZDXL4,ZXWGZDXL4FSSJ,FXWGZDXL,FXWGZDXLFSSJ,WGZXX1,WGZXX2,WGZXX3,WGZXX4,FXWGZXX1,FXWGZXX2,FXWGZXX3,FXWGZXX4,ZXYGZXL,ZXYGZXLFSSJ,ZXYGZXL1,ZXYGZXL1FSSJ,ZXYGZXL2,ZXYGZXL2FSSJ,ZXYGZXL3,ZXYGZXL3FSSJ,ZXYGZXL4,ZXYGZXL4FSSJ,ZXYGSZZXL,ZXYGSZZXLFSSJ,ZXYGSZZXL1,ZXYGSZZXL1FSSJ,ZXYGSZZXL2,ZXYGSZZXL2FSSJ,ZXYGSZZXL3,ZXYGSZZXL3FSSJ,ZXYGSZZXL4,ZXYGSZZXL4FSSJ,SYXLJGSJ,XLZQS,ZXYGLJZDXL,ZXYGLJZDXL1,ZXYGLJZDXL2,ZXYGLJZDXL3,ZXYGLJZDXL4,ZJYCXLFWSJ,XLFWCS,ZJHGS,YPJGLYS,YPJGLYS1,YPJGLYS2,YPJGLYS3,YPJGLYS4,FXYGSZZXL,FXYGSZZXLFSSJ,FXYGSZZXL1,FXYGSZZXL1FSSJ,FXYGSZZXL2,FXYGSZZXL2FSSJ,FXYGSZZXL3,FXYGSZZXL3FSSJ,FXYGSZZXL4,FXYGSZZXL4FSSJ,UFERDL1,UFERDL2,UFERDL3,UFERDL4,DMCRXL1,DMCRXL2,DMCRXL3,DMCRXL4,DBYE,WLYGZ,WLYG1,WLYG2,WLYG3,WLYG4,JDYGZ,JDYG1,JDYG2,JDYG3,JDYG4)VALUES (s.sjid, s.sjsj, nvl(s.jssj, sysdate), s.ct, s.pt, s.zhbl, s.bqbj,0 ,s.ZXYGZ,s.ZXYGZ1,s.ZXYGZ2,s.ZXYGZ3,s.ZXYGZ4,s.FXYGZ,s.FXYGZ1,s.FXYGZ2,s.FXYGZ3,s.FXYGZ4,s.ZXWGZ,s.ZXWGZ1,s.ZXWGZ2,s.ZXWGZ3,s.ZXWGZ4,s.FXWGZ,s.FXWGZ1,s.FXWGZ2,s.FXWGZ3,s.FXWGZ4,s.ZXYGZDXL,TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL1,TO_DATE(S.ZXYGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL2,TO_DATE(S.ZXYGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL3,TO_DATE(S.ZXYGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZDXL4,TO_DATE(S.ZXYGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGZDXL,TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL,TO_DATE(S.ZXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL1,TO_DATE(S.ZXWGZDXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL2,TO_DATE(S.ZXWGZDXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL3,TO_DATE(S.ZXWGZDXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXWGZDXL4,TO_DATE(S.ZXWGZDXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXWGZDXL,TO_DATE(S.FXWGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.WGZXX1,s.WGZXX2,s.WGZXX3,s.WGZXX4,s.FXWGZXX1,s.FXWGZXX2,s.FXWGZXX3,s.FXWGZXX4,s.ZXYGZXL,TO_DATE(S.ZXYGZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL1,TO_DATE(S.ZXYGZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL2,TO_DATE(S.ZXYGZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL3,TO_DATE(S.ZXYGZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGZXL4,TO_DATE(S.ZXYGZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL,TO_DATE(S.ZXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL1,TO_DATE(S.ZXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL2,TO_DATE(S.ZXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL3,TO_DATE(S.ZXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.ZXYGSZZXL4,TO_DATE(S.ZXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.SYXLJGSJ,s.XLZQS,s.ZXYGLJZDXL,s.ZXYGLJZDXL1,s.ZXYGLJZDXL2,s.ZXYGLJZDXL3,s.ZXYGLJZDXL4,TO_DATE(S.ZJYCXLFWSJ,'YYYY-MM-DD HH24:MI:SS'),s.XLFWCS,s.ZJHGS,s.YPJGLYS,s.YPJGLYS1,s.YPJGLYS2,s.YPJGLYS3,s.YPJGLYS4,s.FXYGSZZXL,TO_DATE(S.FXYGSZZXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGSZZXL1,TO_DATE(S.FXYGSZZXL1FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGSZZXL2,TO_DATE(S.FXYGSZZXL2FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGSZZXL3,TO_DATE(S.FXYGSZZXL3FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.FXYGSZZXL4,TO_DATE(S.FXYGSZZXL4FSSJ,'YYYY-MM-DD HH24:MI:SS'),s.UFERDL1,s.UFERDL2,s.UFERDL3,s.UFERDL4,s.DMCRXL1,s.DMCRXL2,s.DMCRXL3,s.DMCRXL4,s.DBYE,s.WLYGZ,s.WLYG1,s.WLYG2,s.WLYG3,s.WLYG4,s.JDYGZ,s.JDYG1,s.JDYG2,s.JDYG3,s.JDYG4)
				LOG ERRORS INTO SB_DLSJ_YDJ_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
				]]>
			</value>
		</property>
	</bean>
	<!-- 预付费月冻结 -->
	<bean id="bp.batchDao.insertPrepayFreezeMonth" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="1004"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_YFFSJ_YDJ(SJID,SJSJ,JSSJ,CT, PT,ZHBL, BQBJ, YE, ZJDQZT,ZJDQCZYY,ZJDQMS,DBMS,JSDYEZT,LJYQL,ZXYGZ)
				VALUES (:SJID,:SJSJ, :JSSJ,:CT,:PT,:ZHBL,:BQBJ, :YE,:ZJDQZT, :ZJDQCZYY,:ZJDQMS,:DBMS, :JSDYEZT,:LJYQL,:ZXYGZ)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
				MERGE INTO SB_YFFSJ_YDJ T
		        USING (SELECT SJID, SJSJ, MAX(JSSJ) AS JSSJ, MAX(CT) AS CT, MAX(PT) AS PT, MAX(ZHBL) AS ZHBL, MAX(BQBJ) AS BQBJ,MAX(XGBJ) AS XGBJ,
		                      MAX(YE) AS YE,  MAX(ZJDQZT) AS ZJDQZT, MAX(ZJDQCZYY) AS ZJDQCZYY, 
		                      MAX(ZJDQMS) AS ZJDQMS, MAX(DBMS) AS DBMS, MAX(JSDYEZT) AS JSDYEZT, 
		                      MAX(LJYQL) AS LJYQL,MAX(ZXYGZ) AS ZXYGZ
		                 FROM TEMP_SB_YFFSJ_YDJ GROUP BY SJID, SJSJ) S
		        ON (T.SJID = S.SJID AND T.SJSJ = S.SJSJ)
		        WHEN MATCHED THEN
		           UPDATE SET T.JSSJ=NVL(S.JSSJ, SYSDATE), T.CT=S.CT, T.PT=S.PT, T.ZHBL=S.ZHBL, T.BQBJ=S.BQBJ, T.XGBJ=S.XGBJ, 
		                      T.YE=NVL(S.YE, T.YE), T.ZJDQZT=NVL(S.ZJDQZT, T.ZJDQZT), T.ZJDQCZYY=NVL(S.ZJDQCZYY, T.ZJDQCZYY), 
		                      T.ZJDQMS=NVL(S.ZJDQMS, T.ZJDQMS), T.DBMS=NVL(S.DBMS, T.DBMS), T.JSDYEZT=NVL(S.JSDYEZT, T.JSDYEZT),
		                      T.LJYQL=NVL(S.LJYQL, T.LJYQL),T.ZXYGZ=NVL(S.ZXYGZ,T.ZXYGZ)
		        WHEN NOT MATCHED THEN
              INSERT (SJID,SJSJ,JSSJ,CT,PT,ZHBL,BQBJ,XGBJ,YE,ZJDQZT,ZJDQCZYY,ZJDQMS,DBMS,JSDYEZT,LJYQL,ZXYGZ)
               VALUES (s.SJID,s.SJSJ,NVL(s.JSSJ,sysdate),s.CT,s.PT,s.ZHBL,s.BQBJ,0,s.YE,s.ZJDQZT,s.ZJDQCZYY,s.ZJDQMS,s.DBMS,s.JSDYEZT,s.LJYQL,s.ZXYGZ)
               LOG ERRORS INTO SB_YFFSJ_YDJ_LOG (TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
				]]>
			</value>
		</property>
	</bean>
	<!-- 预付费日冻结 -->
	<bean id="bp.batchDao.insertPrepay" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="1003"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_YFFSJ(SJID,SJSJ,JSSJ,CT, PT,ZHBL, BQBJ, YE, ZJDQZT,ZJDQCZYY,ZJDQMS,DBMS,JSDYEZT,LJYQL,ZXYGZ)
				VALUES (:SJID,:SJSJ, :JSSJ,:CT,:PT,:ZHBL,:BQBJ, :YE,:ZJDQZT, :ZJDQCZYY,:ZJDQMS,:DBMS, :JSDYEZT,:LJYQL,:ZXYGZ)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
				MERGE INTO SB_YFFSJ T
		        USING (SELECT SJID, SJSJ, MAX(JSSJ) AS JSSJ, MAX(CT) AS CT, MAX(PT) AS PT, MAX(ZHBL) AS ZHBL, MAX(BQBJ) AS BQBJ,MAX(XGBJ) AS XGBJ,
		                      MAX(YE) AS YE,  MAX(ZJDQZT) AS ZJDQZT, MAX(ZJDQCZYY) AS ZJDQCZYY, 
		                      MAX(ZJDQMS) AS ZJDQMS, MAX(DBMS) AS DBMS, MAX(JSDYEZT) AS JSDYEZT, 
		                      MAX(LJYQL) AS LJYQL,MAX(ZXYGZ) AS ZXYGZ
		                 FROM TEMP_SB_YFFSJ GROUP BY SJID, SJSJ) S
		        ON (T.SJID = S.SJID AND T.SJSJ = S.SJSJ)
		        WHEN MATCHED THEN
		           UPDATE SET T.JSSJ=NVL(S.JSSJ, SYSDATE), T.CT=S.CT, T.PT=S.PT, T.ZHBL=S.ZHBL, T.BQBJ=S.BQBJ, T.XGBJ=S.XGBJ,
		                      T.YE=NVL(S.YE, T.YE), T.ZJDQZT=NVL(S.ZJDQZT, T.ZJDQZT), T.ZJDQCZYY=NVL(S.ZJDQCZYY, T.ZJDQCZYY), 
		                      T.ZJDQMS=NVL(S.ZJDQMS, T.ZJDQMS), T.DBMS=NVL(S.DBMS, T.DBMS), T.JSDYEZT=NVL(S.JSDYEZT, T.JSDYEZT),
		                      T.LJYQL=NVL(S.LJYQL, T.LJYQL),T.ZXYGZ=NVL(S.ZXYGZ,T.ZXYGZ)
		        WHEN NOT MATCHED THEN
              INSERT (SJID,SJSJ,JSSJ,CT,PT,ZHBL,BQBJ,XGBJ,YE,ZJDQZT,ZJDQCZYY,ZJDQMS,DBMS,JSDYEZT,LJYQL,ZXYGZ)
               VALUES (s.SJID,s.SJSJ,NVL(s.JSSJ,sysdate),s.CT,s.PT,s.ZHBL,s.BQBJ,0,s.YE,s.ZJDQZT,s.ZJDQCZYY,s.ZJDQMS,s.DBMS,s.JSDYEZT,s.LJYQL,s.ZXYGZ)
               LOG ERRORS INTO SB_YFFSJ_LOG (TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
				]]>
			</value>
		</property>
	</bean>
	<!-- 抄表日数据插入 -->
	<bean id="bp.batchDao.insertReadDay" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
	<property name="key" value="1001"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
			 	  insert into temp_sb_dlsj_cbr (SJID,SJSJ, JSSJ,CT,PT,ZHBL,BQBJ,ZXYGZ,ZXYGZ1,ZXYGZ2,ZXYGZ3,ZXYGZ4,ZXWGZ,ZXWGZ1,ZXWGZ2,ZXWGZ3,ZXWGZ4,FXYGZ,FXYGZ1,FXYGZ2,FXYGZ3,FXYGZ4,FXWGZ,FXWGZ1,FXWGZ2,FXWGZ3,FXWGZ4,ZXYGZDXL,ZXYGZDXLFSSJ,FXYGZDXL,FXYGZDXLFSSJ,WGZXX1,WGZXX2,WGZXX3,WGZXX4,FXWGZXX1,FXWGZXX2,FXWGZXX3,FXWGZXX4,BILLING_DATE) 
      			  values(:SJID,:SJSJ,:JSSJ,:CT,:PT,:ZHBL,:BQBJ,:ZXYGZ,:ZXYGZ1,:ZXYGZ2,:ZXYGZ3,:ZXYGZ4,:ZXWGZ,:ZXWGZ1,:ZXWGZ2,:ZXWGZ3,:ZXWGZ4,:FXYGZ,:FXYGZ1,:FXYGZ2,:FXYGZ3,:FXYGZ4,:FXWGZ,:FXWGZ1,:FXWGZ2,:FXWGZ3,:FXWGZ4,:ZXYGZDXL,:ZXYGZDXLFSSJ,:FXYGZDXL,:FXYGZDXLFSSJ,:WGZXX1,:WGZXX2,:WGZXX3,:WGZXX4,:FXWGZXX1,:FXWGZXX2,:FXWGZXX3,:FXWGZXX4,:BILLING_DATE)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
 MERGE INTO SB_DLSJ_CBR T
        USING (SELECT SJID, SJSJ, MAX(JSSJ) AS JSSJ, MAX(CT) AS CT, MAX(PT) AS PT, MAX(ZHBL) AS ZHBL, MAX(BQBJ) AS BQBJ,MAX(XGBJ) AS XGBJ,
                      MAX(ZXYGZ) AS ZXYGZ,  MAX(ZXYGZ1) AS ZXYGZ1, MAX(ZXYGZ2) AS ZXYGZ2, 
                      MAX(ZXYGZ3) AS ZXYGZ3, MAX(ZXYGZ4) AS ZXYGZ4, MAX(ZXWGZ) AS ZXWGZ, 
                      MAX(ZXWGZ1) AS ZXWGZ1, MAX(ZXWGZ2) AS ZXWGZ2, MAX(ZXWGZ3) AS ZXWGZ3, MAX(ZXWGZ4) AS ZXWGZ4, 
                      MAX(FXYGZ) AS FXYGZ, MAX(FXYGZ1) AS FXYGZ1, MAX(FXYGZ2) AS FXYGZ2, MAX(FXYGZ3) AS FXYGZ3, MAX(FXYGZ4) AS FXYGZ4,
                MAX(FXWGZ) AS FXWGZ, MAX(FXWGZ1) AS FXWGZ1,MAX(FXWGZ2) AS FXWGZ2,MAX(FXWGZ3) AS FXWGZ3,MAX(FXWGZ4) AS FXWGZ4,
                MAX(ZXYGZDXL) AS ZXYGZDXL,MAX(ZXYGZDXLFSSJ) AS ZXYGZDXLFSSJ,     
                MAX(FXYGZDXL) AS FXYGZDXL,MAX(FXYGZDXLFSSJ) AS FXYGZDXLFSSJ,
                MAX(WGZXX1) AS WGZXX1,MAX(WGZXX2) AS WGZXX2,MAX(WGZXX3) AS WGZXX3,MAX(WGZXX4) AS WGZXX4,
                MAX(FXWGZXX1) AS FXWGZXX1,MAX(FXWGZXX2) AS FXWGZXX2,MAX(FXWGZXX3) AS FXWGZXX3,MAX(FXWGZXX4) AS FXWGZXX4,
                MAX(BILLING_DATE) AS BILLING_DATE   
                 FROM TEMP_SB_DLSJ_CBR GROUP BY SJID, SJSJ) S
        ON (T.SJID = S.SJID AND T.SJSJ = S.SJSJ)
        WHEN MATCHED THEN
           UPDATE SET T.JSSJ=NVL(S.JSSJ, SYSDATE), T.CT=S.CT, T.PT=S.PT, T.ZHBL=S.ZHBL, T.BQBJ=S.BQBJ, T.XGBJ=S.XGBJ,
                      T.ZXYGZ=NVL(S.ZXYGZ, T.ZXYGZ), T.ZXYGZ1=NVL(S.ZXYGZ1, T.ZXYGZ1), T.ZXYGZ2=NVL(S.ZXYGZ2, T.ZXYGZ2), 
                      T.ZXYGZ3=NVL(S.ZXYGZ3, T.ZXYGZ3), T.ZXYGZ4=NVL(S.ZXYGZ4, T.ZXYGZ4), T.ZXWGZ=NVL(S.ZXWGZ, T.ZXWGZ),
                      T.ZXWGZ1=NVL(S.ZXWGZ1, T.ZXWGZ1), T.ZXWGZ2=NVL(S.ZXWGZ2, T.ZXWGZ2), 
                      T.ZXWGZ3=NVL(S.ZXWGZ3, T.ZXWGZ3), T.ZXWGZ4=NVL(S.ZXWGZ4, T.ZXWGZ4),
                      T.FXYGZ=NVL(S.FXYGZ, T.FXYGZ), T.FXYGZ1=NVL(S.FXYGZ1, T.FXYGZ1),T.FXYGZ2=NVL(S.FXYGZ2, T.FXYGZ2), T.FXYGZ3=NVL(S.FXYGZ3,T.FXYGZ3), T.FXYGZ4=NVL(S.FXYGZ4,T.FXYGZ4), 
                T.FXWGZ=NVL(S.FXWGZ, T.FXWGZ),  T.FXWGZ1=NVL(S.FXWGZ1, T.FXWGZ1),T.FXWGZ2=NVL(S.FXWGZ2, T.FXWGZ2),
                T.FXWGZ3=NVL(S.FXWGZ3, T.FXWGZ3),T.FXWGZ4=NVL(S.FXWGZ4, T.FXWGZ4),
                T.ZXYGZDXL=NVL(S.ZXYGZDXL,T.ZXYGZDXL),
                T.ZXYGZDXLFSSJ=NVL(TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'), T.ZXYGZDXLFSSJ),
                T.FXYGZDXL=NVL(S.FXYGZDXL,T.FXYGZDXL),
                T.FXYGZDXLFSSJ=NVL(TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'), T.FXYGZDXLFSSJ),
                T.WGZXX1 =NVL(S.WGZXX1,T.WGZXX1),T.WGZXX2 =NVL(S.WGZXX2,T.WGZXX2),T.WGZXX3 =NVL(S.WGZXX3,T.WGZXX3),
                T.WGZXX4 =NVL(S.WGZXX4,T.WGZXX4),T.FXWGZXX1 =NVL(S.FXWGZXX1,T.FXWGZXX1),
                T.FXWGZXX2 =NVL(S.FXWGZXX2,T.FXWGZXX2),T.FXWGZXX3 =NVL(S.FXWGZXX3,T.FXWGZXX3),
                T.FXWGZXX4 =NVL(S.FXWGZXX4,T.FXWGZXX4),T.BILLING_DATE=NVL(TO_DATE(S.BILLING_DATE,'YYYY-MM-DD HH24:MI:SS'),T.BILLING_DATE)
        WHEN NOT MATCHED THEN
           INSERT (SJID,SJSJ, JSSJ,CT,PT,ZHBL,BQBJ,XGBJ,ZXYGZ,ZXYGZ1,ZXYGZ2,ZXYGZ3,ZXYGZ4,ZXWGZ,ZXWGZ1,ZXWGZ2,ZXWGZ3,ZXWGZ4,FXYGZ,FXYGZ1,FXYGZ2,FXYGZ3,FXYGZ4,FXWGZ,
           FXWGZ1,FXWGZ2,FXWGZ3,FXWGZ4,
           ZXYGZDXL,ZXYGZDXLFSSJ,FXYGZDXL,FXYGZDXLFSSJ,WGZXX1,WGZXX2,WGZXX3,WGZXX4,FXWGZXX1,FXWGZXX2,FXWGZXX3,FXWGZXX4,BILLING_DATE)
           VALUES (S.SJID, S.SJSJ, NVL(S.JSSJ, SYSDATE), S.CT, S.PT, S.ZHBL, S.BQBJ,0,S.ZXYGZ,S.ZXYGZ1,S.ZXYGZ2,S.ZXYGZ3,S.ZXYGZ4,S.ZXWGZ,S.ZXWGZ1,S.ZXWGZ2,S.ZXWGZ3,S.ZXWGZ4,S.FXYGZ,S.FXYGZ1,S.FXYGZ2,S.FXYGZ3,S.FXYGZ4,S.FXWGZ, S.FXWGZ1,S.FXWGZ2,S.FXWGZ3,S.FXWGZ4,S.ZXYGZDXL,
           TO_DATE(S.ZXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS'),S.FXYGZDXL,TO_DATE(S.FXYGZDXLFSSJ,'YYYY-MM-DD HH24:MI:SS')
          ,S.WGZXX1,S.WGZXX2,S.WGZXX3,S.WGZXX4,S.FXWGZXX1,S.FXWGZXX2,S.FXWGZXX3,S.FXWGZXX4,TO_DATE(S.BILLING_DATE,'YYYY-MM-DD HH24:MI:SS')
           )
        LOG ERRORS INTO SB_DLSJ_CBR_LOG (TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
        

				]]>
			</value>
		</property>
	</bean>
	<!-- 业务处理器专变任务负荷数据临时表插入 -->	
	<bean id="bp.batchDao.insertTaskFhsj" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="2000"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_FHSJ(SJID,SJSJ,JSSJ,CT,PT,ZHBL,BQBJ,AXDYXWJ,BXDYXWJ,CXDYXWJ,AXDLXWJ,BXDLXWJ,CXDLXWJ,NBWD,AXSZGL,BXSZGL,CXSZGL,DCDY,SYXLZQXL,DQXLZQSYSJ,YPJGLYS,YPJGLYS1,YPJGLYS2,YPJGLYS3,YPJGLYS4,DQYZDXL,DQYZDXL1,DQYZDXL2,DQYZDXL3,DQYZDXL4,AXDY,BXDY,CXDY,AXDL,BXDL,CXDL,SZGL,GLYS,SSYG,SSWG,FXYGGL,FXWGGL,ZXYGZ,ZXWGZ,FXYGZ,FXWGZ,WGZ1,WGZ2,WGZ3,WGZ4,AXGLYS,BXGLYS,CXGLYS,AXSSYG,BXSSYG,CXSSYG,AXSSWG,BXSSWG,CXSSWG,AXZXYGZ,BXZXYGZ,CXZXYGZ,AXZXWGZ,BXZXWGZ,CXZXWGZ,DWPL)
				VALUES(:SJID,:SJSJ,:JSSJ,:CT,:PT,:ZHBL,:BQBJ,:AXDYXWJ,:BXDYXWJ,:CXDYXWJ,:AXDLXWJ,:BXDLXWJ,:CXDLXWJ,:NBWD,:AXSZGL,:BXSZGL,:CXSZGL,:DCDY,:SYXLZQXL,:DQXLZQSYSJ,:YPJGLYS,:YPJGLYS1,:YPJGLYS2,:YPJGLYS3,:YPJGLYS4,:DQYZDXL,:DQYZDXL1,:DQYZDXL2,:DQYZDXL3,:DQYZDXL4,:AXDY,:BXDY,:CXDY,:AXDL,:BXDL,:CXDL,:SZGL,:GLYS,:SSYG,:SSWG,:FXYGGL,:FXWGGL,:ZXYGZ,:ZXWGZ,:FXYGZ,:FXWGZ,:WGZ1,:WGZ2,:WGZ3,:WGZ4,:AXGLYS,:BXGLYS,:CXGLYS,:AXSSYG,:BXSSYG,:CXSSYG,:AXSSWG,:BXSSWG,:CXSSWG,:AXZXYGZ,:BXZXYGZ,:CXZXYGZ,:AXZXWGZ,:BXZXWGZ,:CXZXWGZ,:DWPL)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
				MERGE INTO SB_FHSJ t 
				USING (select sjid, sjsj, max(jssj) as jssj, max(ct) AS ct, max(pt) AS pt, max(zhbl) as zhbl, max(bqbj) AS bqbj,max(xgbj) AS xgbj,max(AXDYXWJ) AS AXDYXWJ,max(BXDYXWJ) AS BXDYXWJ,max(CXDYXWJ) AS CXDYXWJ,max(AXDLXWJ) AS AXDLXWJ,max(BXDLXWJ) AS BXDLXWJ,max(CXDLXWJ) AS CXDLXWJ,max(NBWD) AS NBWD,max(AXSZGL) AS AXSZGL,max(BXSZGL) AS BXSZGL,max(CXSZGL) AS CXSZGL,max(DCDY) AS DCDY,max(SYXLZQXL) AS SYXLZQXL,max(DQXLZQSYSJ) AS DQXLZQSYSJ,max(YPJGLYS) AS YPJGLYS,max(YPJGLYS1) AS YPJGLYS1,max(YPJGLYS2) AS YPJGLYS2,max(YPJGLYS3) AS YPJGLYS3,max(YPJGLYS4) AS YPJGLYS4,max(DQYZDXL) AS DQYZDXL,max(DQYZDXL1) AS DQYZDXL1,max(DQYZDXL2) AS DQYZDXL2,max(DQYZDXL3) AS DQYZDXL3,max(DQYZDXL4) AS DQYZDXL4,max(AXDY) AS AXDY,max(BXDY) AS BXDY,max(CXDY) AS CXDY,max(AXDL) AS AXDL,max(BXDL) AS BXDL,max(CXDL) AS CXDL,max(SZGL) AS SZGL,max(GLYS) AS GLYS,max(SSYG) AS SSYG,max(SSWG) AS SSWG,max(FXYGGL) AS FXYGGL,max(FXWGGL) AS FXWGGL,max(ZXYGZ) AS ZXYGZ,max(ZXWGZ) AS ZXWGZ,max(FXYGZ) AS FXYGZ,max(FXWGZ) AS FXWGZ,max(WGZ1) AS WGZ1,max(WGZ2) AS WGZ2,max(WGZ3) AS WGZ3,max(WGZ4) AS WGZ4,max(AXGLYS) AS AXGLYS,max(BXGLYS) AS BXGLYS,max(CXGLYS) AS CXGLYS,max(AXSSYG) AS AXSSYG,max(BXSSYG) AS BXSSYG,max(CXSSYG) AS CXSSYG,max(AXSSWG) AS AXSSWG,max(BXSSWG) AS BXSSWG,max(CXSSWG) AS CXSSWG,max(AXZXYGZ) AS AXZXYGZ,max(BXZXYGZ) AS BXZXYGZ,max(CXZXYGZ) AS CXZXYGZ,max(AXZXWGZ) AS AXZXWGZ,max(BXZXWGZ) AS BXZXWGZ,max(CXZXWGZ) AS CXZXWGZ,max(DWPL) AS DWPL
				from TEMP_SB_FHSJ group by sjid, sjsj) s 
				ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)WHEN MATCHED THEN 
				UPDATE SET t.jssj=nvl(s.jssj, sysdate), t.ct=s.ct, t.pt=s.pt, t.zhbl=s.zhbl, t.bqbj=s.bqbj, t.xgbj=s.xgbj, 
				t.AXDYXWJ=nvl(s.AXDYXWJ, t.AXDYXWJ),t.BXDYXWJ=nvl(s.BXDYXWJ, t.BXDYXWJ),t.CXDYXWJ=nvl(s.CXDYXWJ, t.CXDYXWJ),t.AXDLXWJ=nvl(s.AXDLXWJ, t.AXDLXWJ),t.BXDLXWJ=nvl(s.BXDLXWJ, t.BXDLXWJ),t.CXDLXWJ=nvl(s.CXDLXWJ, t.CXDLXWJ),t.NBWD=nvl(s.NBWD, t.NBWD),t.AXSZGL=nvl(s.AXSZGL, t.AXSZGL),t.BXSZGL=nvl(s.BXSZGL, t.BXSZGL),t.CXSZGL=nvl(s.CXSZGL, t.CXSZGL),t.DCDY=nvl(s.DCDY, t.DCDY),t.SYXLZQXL=nvl(s.SYXLZQXL, t.SYXLZQXL),t.DQXLZQSYSJ=nvl(s.DQXLZQSYSJ, t.DQXLZQSYSJ),t.YPJGLYS=nvl(s.YPJGLYS, t.YPJGLYS),t.YPJGLYS1=nvl(s.YPJGLYS1, t.YPJGLYS1),t.YPJGLYS2=nvl(s.YPJGLYS2, t.YPJGLYS2),t.YPJGLYS3=nvl(s.YPJGLYS3, t.YPJGLYS3),t.YPJGLYS4=nvl(s.YPJGLYS4, t.YPJGLYS4),t.DQYZDXL=nvl(s.DQYZDXL, t.DQYZDXL),t.DQYZDXL1=nvl(s.DQYZDXL1, t.DQYZDXL1),t.DQYZDXL2=nvl(s.DQYZDXL2, t.DQYZDXL2),t.DQYZDXL3=nvl(s.DQYZDXL3, t.DQYZDXL3),t.DQYZDXL4=nvl(s.DQYZDXL4, t.DQYZDXL4),t.AXDY=nvl(s.AXDY, t.AXDY),t.BXDY=nvl(s.BXDY, t.BXDY),t.CXDY=nvl(s.CXDY, t.CXDY),t.AXDL=nvl(s.AXDL, t.AXDL),t.BXDL=nvl(s.BXDL, t.BXDL),t.CXDL=nvl(s.CXDL, t.CXDL),t.SZGL=nvl(s.SZGL, t.SZGL),t.GLYS=nvl(s.GLYS, t.GLYS),t.SSYG=nvl(s.SSYG, t.SSYG),t.SSWG=nvl(s.SSWG, t.SSWG),t.FXYGGL=nvl(s.FXYGGL, t.FXYGGL),t.FXWGGL=nvl(s.FXWGGL, t.FXWGGL),t.ZXYGZ=nvl(s.ZXYGZ, t.ZXYGZ),t.ZXWGZ=nvl(s.ZXWGZ, t.ZXWGZ),t.FXYGZ=nvl(s.FXYGZ, t.FXYGZ),t.FXWGZ=nvl(s.FXWGZ, t.FXWGZ),t.WGZ1=nvl(s.WGZ1, t.WGZ1),t.WGZ2=nvl(s.WGZ2, t.WGZ2),t.WGZ3=nvl(s.WGZ3, t.WGZ3),t.WGZ4=nvl(s.WGZ4, t.WGZ4),t.AXGLYS=nvl(s.AXGLYS, t.AXGLYS),t.BXGLYS=nvl(s.BXGLYS, t.BXGLYS),t.CXGLYS=nvl(s.CXGLYS, t.CXGLYS),t.AXSSYG=nvl(s.AXSSYG, t.AXSSYG),t.BXSSYG=nvl(s.BXSSYG, t.BXSSYG),t.CXSSYG=nvl(s.CXSSYG, t.CXSSYG),t.AXSSWG=nvl(s.AXSSWG, t.AXSSWG),t.BXSSWG=nvl(s.BXSSWG, t.BXSSWG),t.CXSSWG=nvl(s.CXSSWG, t.CXSSWG),t.AXZXYGZ=nvl(s.AXZXYGZ, t.AXZXYGZ),t.BXZXYGZ=nvl(s.BXZXYGZ, t.BXZXYGZ),t.CXZXYGZ=nvl(s.CXZXYGZ, t.CXZXYGZ),t.AXZXWGZ=nvl(s.AXZXWGZ, t.AXZXWGZ),t.BXZXWGZ=nvl(s.BXZXWGZ, t.BXZXWGZ),t.CXZXWGZ=nvl(s.CXZXWGZ, t.CXZXWGZ),t.DWPL=nvl(s.DWPL, t.DWPL)
				 WHEN NOT MATCHED THEN
				INSERT (sjid, sjsj, jssj, ct, pt, zhbl, bqbj,xgbj ,AXDYXWJ,BXDYXWJ,CXDYXWJ,AXDLXWJ,BXDLXWJ,CXDLXWJ,NBWD,AXSZGL,BXSZGL,CXSZGL,DCDY,SYXLZQXL,DQXLZQSYSJ,YPJGLYS,YPJGLYS1,YPJGLYS2,YPJGLYS3,YPJGLYS4,DQYZDXL,DQYZDXL1,DQYZDXL2,DQYZDXL3,DQYZDXL4,AXDY,BXDY,CXDY,AXDL,BXDL,CXDL,SZGL,GLYS,SSYG,SSWG,FXYGGL,FXWGGL,ZXYGZ,ZXWGZ,FXYGZ,FXWGZ,WGZ1,WGZ2,WGZ3,WGZ4,AXGLYS,BXGLYS,CXGLYS,AXSSYG,BXSSYG,CXSSYG,AXSSWG,BXSSWG,CXSSWG,AXZXYGZ,BXZXYGZ,CXZXYGZ,AXZXWGZ,BXZXWGZ,CXZXWGZ,DWPL)VALUES (s.sjid, s.sjsj, nvl(s.jssj, sysdate), s.ct, s.pt, s.zhbl, s.bqbj,0 ,s.AXDYXWJ,s.BXDYXWJ,s.CXDYXWJ,s.AXDLXWJ,s.BXDLXWJ,s.CXDLXWJ,s.NBWD,s.AXSZGL,s.BXSZGL,s.CXSZGL,s.DCDY,s.SYXLZQXL,s.DQXLZQSYSJ,s.YPJGLYS,s.YPJGLYS1,s.YPJGLYS2,s.YPJGLYS3,s.YPJGLYS4,s.DQYZDXL,s.DQYZDXL1,s.DQYZDXL2,s.DQYZDXL3,s.DQYZDXL4,s.AXDY,s.BXDY,s.CXDY,s.AXDL,s.BXDL,s.CXDL,s.SZGL,s.GLYS,s.SSYG,s.SSWG,s.FXYGGL,s.FXWGGL,s.ZXYGZ,s.ZXWGZ,s.FXYGZ,s.FXWGZ,s.WGZ1,s.WGZ2,s.WGZ3,s.WGZ4,s.AXGLYS,s.BXGLYS,s.CXGLYS,s.AXSSYG,s.BXSSYG,s.CXSSYG,s.AXSSWG,s.BXSSWG,s.CXSSWG,s.AXZXYGZ,s.BXZXYGZ,s.CXZXYGZ,s.AXZXWGZ,s.BXZXWGZ,s.CXZXWGZ,s.DWPL)
				LOG ERRORS INTO SB_FHSJ_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED

				]]>
			</value>
		</property>
	</bean>
	
	<!-- 业务处理器专变任务电压合格率数据数据临时表插入 -->	
	<bean id="bp.batchDao.insertTaskDyhglsj" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="3000"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_DYHGLSJ(SJID,SJSJ,PT,BQBJ,TJCS,AXCSXCS,AXCXXCS,BXCSXCS,BXCXXCS,CXCSXCS,CXCXXCS,AXFZJFSSJ,AXGZJFSSJ,BXFZJFSSJ,BXGZJFSSJ,CXFZJFSSJ,CXGZJFSSJ)
				VALUES(:SJID,:SJSJ,:PT,:BQBJ,:TJCS,:AXCSXCS,:AXCXXCS,:BXCSXCS,:BXCXXCS,:CXCSXCS,:CXCXXCS,:AXFZJFSSJ,:AXGZJFSSJ,:BXFZJFSSJ,:BXGZJFSSJ,:CXFZJFSSJ,:CXGZJFSSJ)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
				MERGE INTO sb_dyhglsj t
				USING (select sjid, sjsj, max(pt) as pt, max(bqbj) as bqbj, max(tjcs) as tjcs, 
								max(axcsxcs) as axcsxcs, max(axcxxcs) as axcxxcs, max(bxcsxcs) as bxcsxcs, max(bxcxxcs) as bxcxxcs, 
								max(cxcsxcs) as cxcsxcs, max(cxcxxcs) as cxcxxcs, max(axfzjfssj) as axfzjfssj, max(axgzjfssj) as axgzjfssj, 
								max(bxfzjfssj) as bxfzjfssj, max(bxgzjfssj) as bxgzjfssj, max(cxfzjfssj) as cxfzjfssj, max(cxgzjfssj) as cxgzjfssj
				       from TEMP_SB_DYHGLSJ group by sjid, sjsj) s
				ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)
				WHEN MATCHED THEN
				   UPDATE SET t.pt=s.pt, t.bqbj=s.bqbj, t.tjcs=nvl(s.tjcs, t.tjcs), 
				              t.axcsxcs=nvl(s.axcsxcs, t.axcsxcs), t.axcxxcs=nvl(s.axcxxcs, t.axcxxcs), 
				              t.bxcsxcs=nvl(s.bxcsxcs, t.bxcsxcs), t.bxcxxcs=nvl(s.bxcxxcs, t.bxcxxcs), 
				              t.cxcsxcs=nvl(s.cxcsxcs, t.cxcsxcs), t.cxcxxcs=nvl(s.cxcxxcs, t.cxcxxcs), 
				              t.axfzjfssj=nvl(s.axfzjfssj, t.axfzjfssj), t.axgzjfssj=nvl(s.axgzjfssj, t.axgzjfssj),
				              t.bxfzjfssj=nvl(s.bxfzjfssj, t.bxfzjfssj), t.bxgzjfssj=nvl(s.bxgzjfssj, t.bxgzjfssj), 
				              t.cxfzjfssj=nvl(s.cxfzjfssj, t.cxfzjfssj), t.cxgzjfssj=nvl(s.cxgzjfssj, t.cxgzjfssj)          
				WHEN NOT MATCHED THEN
				   INSERT (sjid, sjsj, pt, bqbj, tjcs, axcsxcs, axcxxcs, bxcsxcs, bxcxxcs, cxcsxcs, cxcxxcs, 
				          axfzjfssj, axgzjfssj, bxfzjfssj, bxgzjfssj, cxfzjfssj, cxgzjfssj)
				   VALUES (s.sjid, s.sjsj, s.pt, s.bqbj, s.tjcs, s.axcsxcs, s.axcxxcs, s.bxcsxcs, s.bxcxxcs, s.cxcsxcs, s.cxcxxcs, 
				          s.axfzjfssj, s.axgzjfssj, s.bxfzjfssj, s.bxgzjfssj, s.cxfzjfssj, s.cxgzjfssj)	
				LOG ERRORS INTO sb_dyhglsj_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED	
				]]>
			</value>
		</property>
	</bean>
	
		
	<bean id="bp.batchDao.dlmsAlamrStatusUpdate" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="4003"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[				
				MERGE INTO TJ_DLMSGJZT a
					USING(SELECT
						:logicAddress as ZDLJDZ,
						:obis as OBIS,
						:lastReportTime as ZJSBSJ
						from dual)b
				on(a.ZDLJDZ=b.ZDLJDZ and a.OBIS=b.OBIS)
				WHEN MATCHED THEN
					UPDATE SET a.ZJSBSJ=b.ZJSBSJ
				WHEN NOT MATCHED THEN
					INSERT (ZDLJDZ,OBIS,ZJSBSJ)
					VALUES(b.ZDLJDZ,b.OBIS,b.ZJSBSJ)
				]]>
			</value>
		</property>
	</bean>
		<bean id = "bp.batchDao.insertXBJBL" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
	
		<property name="key" value="4006"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_XBJBL(SJID,SJSJ,JSSJ,CT,PT,ZHBL,BQBJ,AYXBZSZ,BYXBZSZ,CYXBZSZ,ALXBZSZ,BLXBZSZ,CLXBZSZ,AYXBFL1,AYXBFL3,AYXBFL5,AYXBFL7,AYXBFL9,AYXBFL11,AYXBFL13,AYXBFL15,AYXBFL17,AYXBFL19,AYXBFL21,BYXBFL1,BYXBFL3,BYXBFL5,BYXBFL7,BYXBFL9,BYXBFL11,BYXBFL13,BYXBFL15,BYXBFL17,BYXBFL19,BYXBFL21,CYXBFL1,CYXBFL3,CYXBFL5,CYXBFL7,CYXBFL9,CYXBFL11,CYXBFL13,CYXBFL15,CYXBFL17,CYXBFL19,CYXBFL21,ALXBFL1,ALXBFL3,ALXBFL5,ALXBFL7,ALXBFL9,ALXBFL11,ALXBFL13,ALXBFL15,ALXBFL17,ALXBFL19,ALXBFL21,BLXBFL1,BLXBFL3,BLXBFL5,BLXBFL7,BLXBFL9,BLXBFL11,BLXBFL13,BLXBFL15,BLXBFL17,BLXBFL19,BLXBFL21,CLXBFL1,CLXBFL3,CLXBFL5,CLXBFL7,CLXBFL9,CLXBFL11,CLXBFL13,CLXBFL15,CLXBFL17,CLXBFL19,CLXBFL21)
				VALUES(:SJID,:SJSJ,:JSSJ,:CT,:PT,:ZHBL,:BQBJ,:AYXBZSZ,:BYXBZSZ,:CYXBZSZ,:ALXBZSZ,:BLXBZSZ,:CLXBZSZ,:AYXBFL1,:AYXBFL3,:AYXBFL5,:AYXBFL7,:AYXBFL9,:AYXBFL11,:AYXBFL13,:AYXBFL15,:AYXBFL17,:AYXBFL19,:AYXBFL21,:BYXBFL1,:BYXBFL3,:BYXBFL5,:BYXBFL7,:BYXBFL9,:BYXBFL11,:BYXBFL13,:BYXBFL15,:BYXBFL17,:BYXBFL19,:BYXBFL21,:CYXBFL1,:CYXBFL3,:CYXBFL5,:CYXBFL7,:CYXBFL9,:CYXBFL11,:CYXBFL13,:CYXBFL15,:CYXBFL17,:CYXBFL19,:CYXBFL21,:ALXBFL1,:ALXBFL3,:ALXBFL5,:ALXBFL7,:ALXBFL9,:ALXBFL11,:ALXBFL13,:ALXBFL15,:ALXBFL17,:ALXBFL19,:ALXBFL21,:BLXBFL1,:BLXBFL3,:BLXBFL5,:BLXBFL7,:BLXBFL9,:BLXBFL11,:BLXBFL13,:BLXBFL15,:BLXBFL17,:BLXBFL19,:BLXBFL21,:CLXBFL1,:CLXBFL3,:CLXBFL5,:CLXBFL7,:CLXBFL9,:CLXBFL11,:CLXBFL13,:CLXBFL15,:CLXBFL17,:CLXBFL19,:CLXBFL21)

				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
			MERGE INTO SB_XBJBL t 
			USING (select sjid, sjsj, max(jssj) as jssj, max(ct) AS ct, max(pt) AS pt, max(zhbl) as zhbl, max(bqbj) AS bqbj,max(xgbj) AS xgbj,max(AYXBZSZ) AS AYXBZSZ,max(BYXBZSZ) AS BYXBZSZ,max(CYXBZSZ) AS CYXBZSZ,max(ALXBZSZ) AS ALXBZSZ,max(BLXBZSZ) AS BLXBZSZ,max(CLXBZSZ) AS CLXBZSZ,max(AYXBFL1) AS AYXBFL1,max(AYXBFL3) AS AYXBFL3,max(AYXBFL5) AS AYXBFL5,max(AYXBFL7) AS AYXBFL7,max(AYXBFL9) AS AYXBFL9,max(AYXBFL11) AS AYXBFL11,max(AYXBFL13) AS AYXBFL13,max(AYXBFL15) AS AYXBFL15,max(AYXBFL17) AS AYXBFL17,max(AYXBFL19) AS AYXBFL19,max(AYXBFL21) AS AYXBFL21,max(BYXBFL1) AS BYXBFL1,max(BYXBFL3) AS BYXBFL3,max(BYXBFL5) AS BYXBFL5,max(BYXBFL7) AS BYXBFL7,max(BYXBFL9) AS BYXBFL9,max(BYXBFL11) AS BYXBFL11,max(BYXBFL13) AS BYXBFL13,max(BYXBFL15) AS BYXBFL15,max(BYXBFL17) AS BYXBFL17,max(BYXBFL19) AS BYXBFL19,max(BYXBFL21) AS BYXBFL21,max(CYXBFL1) AS CYXBFL1,max(CYXBFL3) AS CYXBFL3,max(CYXBFL5) AS CYXBFL5,max(CYXBFL7) AS CYXBFL7,max(CYXBFL9) AS CYXBFL9,max(CYXBFL11) AS CYXBFL11,max(CYXBFL13) AS CYXBFL13,max(CYXBFL15) AS CYXBFL15,max(CYXBFL17) AS CYXBFL17,max(CYXBFL19) AS CYXBFL19,max(CYXBFL21) AS CYXBFL21,max(ALXBFL1) AS ALXBFL1,max(ALXBFL3) AS ALXBFL3,max(ALXBFL5) AS ALXBFL5,max(ALXBFL7) AS ALXBFL7,max(ALXBFL9) AS ALXBFL9,max(ALXBFL11) AS ALXBFL11,max(ALXBFL13) AS ALXBFL13,max(ALXBFL15) AS ALXBFL15,max(ALXBFL17) AS ALXBFL17,max(ALXBFL19) AS ALXBFL19,max(ALXBFL21) AS ALXBFL21,max(BLXBFL1) AS BLXBFL1,max(BLXBFL3) AS BLXBFL3,max(BLXBFL5) AS BLXBFL5,max(BLXBFL7) AS BLXBFL7,max(BLXBFL9) AS BLXBFL9,max(BLXBFL11) AS BLXBFL11,max(BLXBFL13) AS BLXBFL13,max(BLXBFL15) AS BLXBFL15,max(BLXBFL17) AS BLXBFL17,max(BLXBFL19) AS BLXBFL19,max(BLXBFL21) AS BLXBFL21,max(CLXBFL1) AS CLXBFL1,max(CLXBFL3) AS CLXBFL3,max(CLXBFL5) AS CLXBFL5,max(CLXBFL7) AS CLXBFL7,max(CLXBFL9) AS CLXBFL9,max(CLXBFL11) AS CLXBFL11,max(CLXBFL13) AS CLXBFL13,max(CLXBFL15) AS CLXBFL15,max(CLXBFL17) AS CLXBFL17,max(CLXBFL19) AS CLXBFL19,max(CLXBFL21) AS CLXBFL21
			from TEMP_SB_XBJBL group by sjid, sjsj) s 
			ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)WHEN MATCHED THEN 
			UPDATE SET t.jssj=nvl(s.jssj, sysdate), t.ct=s.ct, t.pt=s.pt, t.zhbl=s.zhbl, t.bqbj=s.bqbj, t.xgbj=s.xgbj, 
			t.AYXBZSZ=nvl(s.AYXBZSZ, t.AYXBZSZ),t.BYXBZSZ=nvl(s.BYXBZSZ, t.BYXBZSZ),t.CYXBZSZ=nvl(s.CYXBZSZ, t.CYXBZSZ),t.ALXBZSZ=nvl(s.ALXBZSZ, t.ALXBZSZ),t.BLXBZSZ=nvl(s.BLXBZSZ, t.BLXBZSZ),t.CLXBZSZ=nvl(s.CLXBZSZ, t.CLXBZSZ),t.AYXBFL1=nvl(s.AYXBFL1, t.AYXBFL1),t.AYXBFL3=nvl(s.AYXBFL3, t.AYXBFL3),t.AYXBFL5=nvl(s.AYXBFL5, t.AYXBFL5),t.AYXBFL7=nvl(s.AYXBFL7, t.AYXBFL7),t.AYXBFL9=nvl(s.AYXBFL9, t.AYXBFL9),t.AYXBFL11=nvl(s.AYXBFL11, t.AYXBFL11),t.AYXBFL13=nvl(s.AYXBFL13, t.AYXBFL13),t.AYXBFL15=nvl(s.AYXBFL15, t.AYXBFL15),t.AYXBFL17=nvl(s.AYXBFL17, t.AYXBFL17),t.AYXBFL19=nvl(s.AYXBFL19, t.AYXBFL19),t.AYXBFL21=nvl(s.AYXBFL21, t.AYXBFL21),t.BYXBFL1=nvl(s.BYXBFL1, t.BYXBFL1),t.BYXBFL3=nvl(s.BYXBFL3, t.BYXBFL3),t.BYXBFL5=nvl(s.BYXBFL5, t.BYXBFL5),t.BYXBFL7=nvl(s.BYXBFL7, t.BYXBFL7),t.BYXBFL9=nvl(s.BYXBFL9, t.BYXBFL9),t.BYXBFL11=nvl(s.BYXBFL11, t.BYXBFL11),t.BYXBFL13=nvl(s.BYXBFL13, t.BYXBFL13),t.BYXBFL15=nvl(s.BYXBFL15, t.BYXBFL15),t.BYXBFL17=nvl(s.BYXBFL17, t.BYXBFL17),t.BYXBFL19=nvl(s.BYXBFL19, t.BYXBFL19),t.BYXBFL21=nvl(s.BYXBFL21, t.BYXBFL21),t.CYXBFL1=nvl(s.CYXBFL1, t.CYXBFL1),t.CYXBFL3=nvl(s.CYXBFL3, t.CYXBFL3),t.CYXBFL5=nvl(s.CYXBFL5, t.CYXBFL5),t.CYXBFL7=nvl(s.CYXBFL7, t.CYXBFL7),t.CYXBFL9=nvl(s.CYXBFL9, t.CYXBFL9),t.CYXBFL11=nvl(s.CYXBFL11, t.CYXBFL11),t.CYXBFL13=nvl(s.CYXBFL13, t.CYXBFL13),t.CYXBFL15=nvl(s.CYXBFL15, t.CYXBFL15),t.CYXBFL17=nvl(s.CYXBFL17, t.CYXBFL17),t.CYXBFL19=nvl(s.CYXBFL19, t.CYXBFL19),t.CYXBFL21=nvl(s.CYXBFL21, t.CYXBFL21),t.ALXBFL1=nvl(s.ALXBFL1, t.ALXBFL1),t.ALXBFL3=nvl(s.ALXBFL3, t.ALXBFL3),t.ALXBFL5=nvl(s.ALXBFL5, t.ALXBFL5),t.ALXBFL7=nvl(s.ALXBFL7, t.ALXBFL7),t.ALXBFL9=nvl(s.ALXBFL9, t.ALXBFL9),t.ALXBFL11=nvl(s.ALXBFL11, t.ALXBFL11),t.ALXBFL13=nvl(s.ALXBFL13, t.ALXBFL13),t.ALXBFL15=nvl(s.ALXBFL15, t.ALXBFL15),t.ALXBFL17=nvl(s.ALXBFL17, t.ALXBFL17),t.ALXBFL19=nvl(s.ALXBFL19, t.ALXBFL19),t.ALXBFL21=nvl(s.ALXBFL21, t.ALXBFL21),t.BLXBFL1=nvl(s.BLXBFL1, t.BLXBFL1),t.BLXBFL3=nvl(s.BLXBFL3, t.BLXBFL3),t.BLXBFL5=nvl(s.BLXBFL5, t.BLXBFL5),t.BLXBFL7=nvl(s.BLXBFL7, t.BLXBFL7),t.BLXBFL9=nvl(s.BLXBFL9, t.BLXBFL9),t.BLXBFL11=nvl(s.BLXBFL11, t.BLXBFL11),t.BLXBFL13=nvl(s.BLXBFL13, t.BLXBFL13),t.BLXBFL15=nvl(s.BLXBFL15, t.BLXBFL15),t.BLXBFL17=nvl(s.BLXBFL17, t.BLXBFL17),t.BLXBFL19=nvl(s.BLXBFL19, t.BLXBFL19),t.BLXBFL21=nvl(s.BLXBFL21, t.BLXBFL21),t.CLXBFL1=nvl(s.CLXBFL1, t.CLXBFL1),t.CLXBFL3=nvl(s.CLXBFL3, t.CLXBFL3),t.CLXBFL5=nvl(s.CLXBFL5, t.CLXBFL5),t.CLXBFL7=nvl(s.CLXBFL7, t.CLXBFL7),t.CLXBFL9=nvl(s.CLXBFL9, t.CLXBFL9),t.CLXBFL11=nvl(s.CLXBFL11, t.CLXBFL11),t.CLXBFL13=nvl(s.CLXBFL13, t.CLXBFL13),t.CLXBFL15=nvl(s.CLXBFL15, t.CLXBFL15),t.CLXBFL17=nvl(s.CLXBFL17, t.CLXBFL17),t.CLXBFL19=nvl(s.CLXBFL19, t.CLXBFL19),t.CLXBFL21=nvl(s.CLXBFL21, t.CLXBFL21)
			 WHEN NOT MATCHED THEN
			INSERT (sjid, sjsj, jssj, ct, pt, zhbl, bqbj,xgbj ,AYXBZSZ,BYXBZSZ,CYXBZSZ,ALXBZSZ,BLXBZSZ,CLXBZSZ,AYXBFL1,AYXBFL3,AYXBFL5,AYXBFL7,AYXBFL9,AYXBFL11,AYXBFL13,AYXBFL15,AYXBFL17,AYXBFL19,AYXBFL21,BYXBFL1,BYXBFL3,BYXBFL5,BYXBFL7,BYXBFL9,BYXBFL11,BYXBFL13,BYXBFL15,BYXBFL17,BYXBFL19,BYXBFL21,CYXBFL1,CYXBFL3,CYXBFL5,CYXBFL7,CYXBFL9,CYXBFL11,CYXBFL13,CYXBFL15,CYXBFL17,CYXBFL19,CYXBFL21,ALXBFL1,ALXBFL3,ALXBFL5,ALXBFL7,ALXBFL9,ALXBFL11,ALXBFL13,ALXBFL15,ALXBFL17,ALXBFL19,ALXBFL21,BLXBFL1,BLXBFL3,BLXBFL5,BLXBFL7,BLXBFL9,BLXBFL11,BLXBFL13,BLXBFL15,BLXBFL17,BLXBFL19,BLXBFL21,CLXBFL1,CLXBFL3,CLXBFL5,CLXBFL7,CLXBFL9,CLXBFL11,CLXBFL13,CLXBFL15,CLXBFL17,CLXBFL19,CLXBFL21)VALUES (s.sjid, s.sjsj, nvl(s.jssj, sysdate), s.ct, s.pt, s.zhbl, s.bqbj,0 ,s.AYXBZSZ,s.BYXBZSZ,s.CYXBZSZ,s.ALXBZSZ,s.BLXBZSZ,s.CLXBZSZ,s.AYXBFL1,s.AYXBFL3,s.AYXBFL5,s.AYXBFL7,s.AYXBFL9,s.AYXBFL11,s.AYXBFL13,s.AYXBFL15,s.AYXBFL17,s.AYXBFL19,s.AYXBFL21,s.BYXBFL1,s.BYXBFL3,s.BYXBFL5,s.BYXBFL7,s.BYXBFL9,s.BYXBFL11,s.BYXBFL13,s.BYXBFL15,s.BYXBFL17,s.BYXBFL19,s.BYXBFL21,s.CYXBFL1,s.CYXBFL3,s.CYXBFL5,s.CYXBFL7,s.CYXBFL9,s.CYXBFL11,s.CYXBFL13,s.CYXBFL15,s.CYXBFL17,s.CYXBFL19,s.CYXBFL21,s.ALXBFL1,s.ALXBFL3,s.ALXBFL5,s.ALXBFL7,s.ALXBFL9,s.ALXBFL11,s.ALXBFL13,s.ALXBFL15,s.ALXBFL17,s.ALXBFL19,s.ALXBFL21,s.BLXBFL1,s.BLXBFL3,s.BLXBFL5,s.BLXBFL7,s.BLXBFL9,s.BLXBFL11,s.BLXBFL13,s.BLXBFL15,s.BLXBFL17,s.BLXBFL19,s.BLXBFL21,s.CLXBFL1,s.CLXBFL3,s.CLXBFL5,s.CLXBFL7,s.CLXBFL9,s.CLXBFL11,s.CLXBFL13,s.CLXBFL15,s.CLXBFL17,s.CLXBFL19,s.CLXBFL21)
			LOG ERRORS INTO SB_XBJBL_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED

				]]>
			</value>
		</property>
	</bean>
	
	<bean id = "bp.batchDao.insertBYQWD" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
	
		<property name="key" value="4005"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TEMP_SB_BYQWD(SJID,SJSJ,PT,BQBJ,WD,YL)
				VALUES(:SJID,:SJSJ,:PT,:BQBJ,:WD,:YL)
				]]>
			</value>
		</property>
		<property name="additiveSql">
			<value>
				<![CDATA[
			MERGE INTO SB_BYQWD t 
			USING (select sjid, sjsj, max(jssj) as jssj, max(ct) AS ct, max(pt) AS pt, max(zhbl) as zhbl, max(bqbj) AS bqbj,max(xgbj) AS xgbj,max(WD) AS WD,max(YL) AS YL
			from TEMP_SB_BYQWD group by sjid, sjsj) s 
			ON (t.sjid = s.sjid AND t.sjsj = s.sjsj)WHEN MATCHED THEN 
			UPDATE SET t.jssj=nvl(s.jssj, sysdate), t.ct=s.ct, t.pt=s.pt, t.zhbl=s.zhbl, t.bqbj=s.bqbj, t.xgbj=s.xgbj, 
			t.WD=nvl(s.WD, t.WD),t.YL=nvl(s.YL, t.YL)
			 WHEN NOT MATCHED THEN
			INSERT (sjid, sjsj, jssj, ct, pt, zhbl, bqbj,xgbj ,WD,YL)VALUES (s.sjid, s.sjsj, nvl(s.jssj, sysdate), s.ct, s.pt, s.zhbl, s.bqbj,0 ,s.WD,s.YL)
			LOG ERRORS INTO SB_BYQWD_log (to_char(sysdate, 'YYYYMMDDHH24MISS')) REJECT LIMIT UNLIMITED
				]]>
			</value>
		</property>
	</bean>
	
	
	
	<!-- 业务处理器专变异常数据表插入 -->	
	<bean id="bp.batchDao.insertAlarm" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="4000"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[				
				MERGE INTO SB_GJ a
					USING(SELECT
						:dataSaveID as SJID,
						:alertCodeHex as GJBM,
						:alertTime as RQSJ,
						:receiveTime as JSSJ,
						:sbcs as SBCS from dual)b
				on(a.SJID=b.SJID and a.GJBM=b.GJBM and a.RQSJ =b.RQSJ and (a.SBCS=b.SBCS or a.sbcs is null))
				WHEN MATCHED THEN
					UPDATE SET a.JSSJ=b.JSSJ
				WHEN NOT MATCHED THEN
					INSERT (SJID,GJBM,RQSJ,JSSJ,SBCS)
					VALUES(b.SJID,b.GJBM,b.RQSJ,b.JSSJ,b.SBCS)
				]]>
			</value>
		</property>
	</bean>
	
	<!-- 通讯状况存储 -->
	<bean id="bp.batchDao.rtu.commstate" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="6003"></property>
		<property name="batchSize"><value>2000</value></property>
		<property name="delaySecond"><value>10</value></property>
		<property name="dataSource" ref="dataSourceRz"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO TX_ZDZXQK( ZDLJDZ,IP,ZT,FSSJ)
								VALUES( :logicAddress,:peerAddress,:status,sysdate)
				]]>
			</value>
		</property>
	</bean>
	
	<!-- 升级更新 -->
	<bean id="bp.batchDao.updateUpgradeInfo" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="4004"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[				
				   update gj_rjsj
			   	   set 
			       zzs          = :blockCount,
			       dqdjz        = :curBlockNum,
			       ldz          = :reissueBlock,
			       sjzt         = :status,
			       zcd			= :maxSize
				   where rjsjid=:softUpgradeID
			]]>
			</value>
		</property>
	</bean>
	
	<!-- 集中器自动注册 -->
	<bean id="bp.batchDao.autoRegister" class ="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="4001"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sql">
			<value>
				<![CDATA[				
				MERGE INTO RZ_JZQZC  a 
 					USING (SELECT  
					:logicAddress AS ZDLJDZ , 
					:measurePoint as CLD,
					:registerTime as SBSJ,
					:meterAddress as TXDZ,
					:value as SBCS, 
 					:status as JRZT from dual) b
				ON(a.TXDZ = b.TXDZ) 
				WHEN MATCHED THEN
					UPDATE  SET JRZT = b.JRZT ,SBCS=b.SBCS,SBSJ=sysdate ,ZDLJDZ=b.ZDLJDZ,CLD =b.CLD
					WHEN NOT MATCHED THEN 
						insert(ZDLJDZ,CLD,SBSJ,JRZT,SBCS,TXDZ) 
						VALUES(b.ZDLJDZ,b.CLD,sysdate,b.JRZT,b.SBCS,b.TXDZ) 
			]]>
			</value>
		</property>
	</bean>
	
	<!-- 业务处理器专变上行非法原始报文插入 -->
	<bean id="bp.batchDao.insertUpErrLog" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao">
		<property name="key" value="5002"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSourceRz"/>
		<property name="sql">
			<value>
				<![CDATA[
				INSERT INTO BW_ZBFF( ZDLJDZ,QYM,KZM,JSSJ,YSBW)
								VALUES( :logicAddress,:qym,:kzm,:time,:body)
				]]>
			</value>
		</property>
	</bean>
	
	<!-- 业务处理器终端实时工况信息插入 -->
	<bean id="bp.batchDao.insertRtuTaskInfo" class="cn.hexing.db.batch.dao.jdbc.JdbcBatchDao2">
		<property name="key" value="5100"/>
		<property name="batchSize"><value>${bp.batchSize}</value></property>
		<property name="delaySecond"><value>${bp.delaySecond}</value></property>
		<property name="dataSource" ref="dataSource"/>
		<property name="sqlPre" value="update temp_e_zdssgk set kg = 1 where yt = 1"/>
		<property name="sql">
			<value><![CDATA[
			UPDATE e_zdssgk SET  dqfh   = :value * nvl(:ct, 1) * nvl(:pt, 1),
       		zjsjsj = :time, dqsjbh = :code, sjjssj = sysdate, ct = :ct, pt = :pt,  txfs = :txfs
 			WHERE hh = :customerNo AND zdjh = :rtuId
 			]]></value>
		</property>
	</bean>
	
	<bean id="bp.event.handle.readTask" class="cn.hexing.fk.bp.processor.TaskMessageHandler">
		<property name="key" value="4"/>
	</bean>
	<bean id="bp.event.handle.expAlarm" class="cn.hexing.fk.bp.processor.AlarmMessageHandler">
		<property name="key" value="3"/>
		<property name="notifiedAlertCodes" value="0102,0182,01C1,C600"/>
		<property name="masterDbService" ref="master.dbservice"/>
	</bean>
	
	<bean id="bp.asyncService" class="cn.hexing.db.batch.AsyncService" init-method="initData">
		<property name="daoList">
			<list>
				<ref bean="bp.batchDao.insertUpErrLog" />
				<ref bean="bp.batchDao.insertTaskData" />	
				<ref bean="bp.batchDao.insertRtuTaskInfo" />				
				<ref bean="bp.batchDao.insertTaskDlsj" />
				<ref bean="bp.batchDao.insertReadDay" />
				<ref bean="bp.batchDao.insertFreezeMonth" />
				<ref bean="bp.batchDao.insertTaskFhsj" />
				<ref bean="bp.batchDao.insertTaskDyhglsj" />
				<ref bean="bp.batchDao.insertPrepay"/>							
				<ref bean="bp.batchDao.insertAlarm" />	
				<ref bean="bp.batchDao.autoRegister"/>	
				<ref bean="bp.batchDao.updateUpgradeInfo"/>
				<ref bean="bp.batchDao.rtu.commstate"/>
				<ref bean="bp.batchDao.insertPrepayFreezeMonth"/>
				<ref bean="bp.batchDao.dlmsAlamrStatusUpdate"/>	
				<ref bean="bp.batchDao.insertBYQWD"/>
				<ref bean="bp.batchDao.insertXBJBL"/>	
			</list>
		</property>
		<property name="bpHandlerMap">
			<map>
				<entry>
					<key><ref bean="EventType.BP_READ_TASK" /></key>
					<ref bean="bp.event.handle.readTask" />
				</entry>
				<entry>
					<key><ref bean="EventType.BP_EXP_ALARM" /></key>
					<ref bean="bp.event.handle.expAlarm" />
				</entry>
			</map>
		</property>
		<property name="dataSource" ref="dataSource"/>
		<property name="dataSourceRz" ref="dataSourceRz"/>
		<property name="maxThreadSize" value="100"/>
		<property name="fileCache" value="false"/>
	</bean>

	<bean id="fasSystem" class="cn.hexing.fk.FasSystem"
		init-method="initialize">
		<property name="eventHooks">
			<list>
				<ref bean="webserver.event.hook" />
				<ref bean="monitor.event.handler" />
			</list>
		</property>
		<property name="modules">
			<list>
				<ref bean="bp.dlms.processor" />
				<ref bean="bp.ansi.processor" />	
				<ref bean="bp.server.web" />
				<ref bean="bp.com.client" />
				<ref bean="bp.asyncService" />	
				<ref bean="bp.msg.processor" />	
				<ref bean="bp.msg.filetransfer" />	
<!--				<ref bean="bp.rereadTask.client" />			-->
				<ref bean="monitor.server" />																	
			</list>
		</property>		
	</bean>

	<!-- 定义定时Job -->
	<bean id="job.showProfile" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="fasSystem" />
		<property name="targetMethod" value="showProfile" />
	</bean>
	<bean id="cronTrigger.showProfile" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="job.showProfile" />
		<property name="cronExpression"><value>${sys.showprofile.cronExpression}</value></property>
	</bean>
	<bean id="bp.refreshRtu" class="cn.hexing.fk.bp.processor.RtuRefreshManage">
		<property name="masterDbService" ref="master.dbservice"/>
		<property name="manageRtu" ref="manageRtu"/>	
	</bean>
	<bean id="job.refreshRtu" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="bp.refreshRtu" />
		<property name="targetMethod" value="refreshRtuCache" />
	</bean>
	<bean id="cronTrigger.refreshRtuCache" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="job.refreshRtu" />
		<property name="cronExpression"><value>${bp.refreshRtu.cronExpression}</value></property>
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger.showProfile" />
				<ref bean="cronTrigger.refreshRtuCache" />
			</list>
		</property>
	</bean>
	
	
<!-- 从数据库中加载DlmsScaleItem -->
	<bean id="dao.initDlmsItem" class="cn.hexing.fk.bp.dlms.persisit.JdbcDlmsDao">
		<property name="dataSource" ref="dataSource"/>
		
		<property name="sqlLoadDlmsMultiScaleGroupByType">
			<value>
			<![CDATA[
			select  t.M_MODLE as M_MODEL,
					t.DLMS_SUB_PROTOCOL AS DLMS_SUB_PROTOCOL,
					t1.ITEM_ID AS ITEM_ID,
					t1.SCALE AS SCALE
			from DLMS_SCALE_MODLE t,DLMS_SCALE_CONFIG t1
			where t1.M_S_VERSION = t.M_S_VERSION
				]]>
			</value>
		</property>
		<property name="mapplerLoadMultiScale">
			<bean class="cn.hexing.db.resultmap.ResultMapper">
				<property name="resultClass" value="cn.hexing.fk.bp.model.DlmsMultiScale"/>
				<property name="columnMapper">
					<list>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="meterType"/>
						<property name="index" value="1"/>
					</bean>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="subProtocol"/>
						<property name="index" value="2"/>
					</bean>	
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="itemId"/>
						<property name="index" value="3"/>
					</bean>	
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="scale"/>
						<property name="index" value="4"/>
					</bean>	
					</list>
				</property>
			</bean>
		</property>
		<property name="sqlLoadDlmsAlarmStatus">
			<value>
			<![CDATA[
 				SELECT ZDLJDZ, OBIS, ZJSBSJ FROM TJ_DLMSGJZT
				]]>
			</value>
		</property>
		<property name="mapperLoadDlmsAlarmStatus">
			<bean class="cn.hexing.db.resultmap.ResultMapper">
				<property name="resultClass" value="cn.hexing.fk.bp.model.DlmsAlarmStatus"/>
				<property name="columnMapper">
					<list>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="logicAddress"/>
						<property name="index" value="1"/>
					</bean>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="obis"/>
						<property name="index" value="2"/>
					</bean>	
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
						<property name="property" value="lastReportTime"/>
						<property name="index" value="3"/>
					</bean>	
					</list>
				</property>
			</bean>
		</property>
		<property name="sqlLoadBlockRelatedSmall">
			<value>
			<![CDATA[
 				SELECT DXSJXBM,XXSJXBM FROM P_DBSJXMX ORDER BY XH 
				]]>
			</value>
		</property>
		
		<property name="sqlLoadDlmsCommandByTaskNo">
			<value>
			<![CDATA[
				SELECT MLID, CZRWID, HYSJ, MLZT
	  			FROM CZ_MLLB
	  			WHERE CZRWID=?
				]]>
			</value>
		</property>
		<property name="mapperLoadDlmsCommand">
			<bean class="cn.hexing.db.resultmap.ResultMapper">
				<property name="resultClass" value="cn.hexing.fk.bp.model.DlmsCommand"/>
				<property name="columnMapper">
					<list>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="commId"/>
							<property name="index" value="1"/>
						</bean>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="taskNo"/>
							<property name="index" value="2"/>
						</bean>	
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="receiveDate"/>
							<property name="index" value="3"/>
						</bean>	
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="status"/>
							<property name="index" value="4"/>
						</bean>	
					</list>
				</property>
			</bean>
		</property>
		<property name="sqlLoadScaleItem">
			<value>
				<![CDATA[
				select 
				item_id,
				dlms_sub_protocol,
				class_id,
				obis,
				attribute_id,
				scale,
				dlms_data_type,
				calling_data_type,
				ARRAY_STRUCT_ITEM,
				customize_class
				from dlms_params a
						]]>
			</value>
		</property>
		<property name="mapperLoadScaleItem">
			<bean class="cn.hexing.db.resultmap.ResultMapper">
				<property name="resultClass" value="cn.hexing.fk.bp.dlms.protocol.DlmsScaleItem"/>
				<property name="columnMapper">
					<list>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="id"/>
							<property name="index" value="1"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="subProtocol"/>
							<property name="index" value="2"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="classId"/>
							<property name="index" value="3"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="obis"/>
							<property name="index" value="4"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="attrId"/>
							<property name="index" value="5"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="scale"/>
							<property name="index" value="6"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="dlmsDataType"/>
							<property name="index" value="7"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="callingDataType"/>
							<property name="index" value="8"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="arrayStructItems"/>
							<property name="index" value="9"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="customizeClass"/>
							<property name="index" value="10"/>
						</bean>
					
					</list>
				</property>
			</bean>
		</property>
		<property name="sqlUpdateEsamKeyVersion">
			<value>
				<![CDATA[
					update da_bj
					set mybb = ?
				 	where txdz=?
					]]>
			</value>
		</property>
		<property name="sqlUpdateEncriptKey">
			<value>
				<![CDATA[
					update da_bj
					set gqxmm = ?
				 	where txdz=?
					]]>
			</value>
		</property>
		<property name="sqlUpdateChannelSet">
			<value>
				<![CDATA[
			   		  UPDATE RW_ZDRW T
                      SET T.SFYX = 1, T.RWBJ = 1, T.ZT = '04',T.XFCGSJ=sysdate
                      WHERE ZDJH = ?
                      AND RWH = ?
					]]>
			</value>
		</property>
		<property name="sqlLoadItemRelated">
				<value>
					<![CDATA[
				  select sjxbm, item_id from p_dlmssjxgx
					]]>
				</value>
		</property>
		<property name="mapperLoadItemRelated">
			<bean class="cn.hexing.db.resultmap.ResultMapper">
				<property name="resultClass" value="cn.hexing.fk.model.DlmsItemRelated"/>
				<property name="columnMapper">
					<list>
					<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="code"/>
							<property name="index" value="1"/>
						</bean>
						<bean class="cn.hexing.db.resultmap.ColumnMapper">
							<property name="property" value="attribute"/>
							<property name="index" value="2"/>
						</bean>	
					</list>
				</property>
			</bean>
		</property>
	</bean>
	

	<bean id="managerScaleItem" class="cn.hexing.fk.bp.dlms.protocol.DlmsScaleManager" 
		factory-method="getInstance"	init-method="init">
		<property name="scaleDao" ref="dao.initDlmsItem" />
	</bean>
	<bean id="bp.dlms.dboperator" class="cn.hexing.fk.bp.dlms.persisit.MasterDbServiceAssistant"
		factory-method="getInstance">
		<property name="masterDbService" ref="master.dbservice"/>
		<property name="jdbcDao" ref="dao.initDlmsItem"/>
		<property name="service" ref="bp.asyncService"/>
		<property name="noticeMSDelayTimeAfterReadEvent" value="5"/> <!-- second -->
	</bean>
	<bean id="bp.dlms.taskoperator" class="cn.hexing.fk.bp.dlms.persisit.TaskMessageService"
		factory-method="getInstance" init-method="init">
		<property name="service" ref="bp.asyncService"></property>
		<property name="itemRelatedDao" ref="dao.initDlmsItem" />
	</bean>
	<bean id="bp.dlms.alarmoperator" class="cn.hexing.fk.bp.dlms.persisit.DlmsAlarmMessageService" 
		factory-method="getInstance"	init-method="init">
<!-- 		<property name="alarmMessageDao" ref="dao.initDlmsItem" /> -->
		<property name="service" ref="bp.asyncService"/>
	</bean>
	
	<bean id="bp.dlms.upgradeprocessor" class="cn.hexing.fk.bp.dlms.upgrade.DlmsUpgradeHandler"
	 factory-method="getInstance" init-method="init">
	<property name="dbService" ref="master.dbservice"/>
	<property name="service" ref="bp.asyncService"/>
	<property name="sleepTimeStay06Step" value="15"/>
	</bean>
	
	<bean id="bp.ansi.upgradeprocessor" class=" cn.hexing.fk.bp.ansi.upgrade.AnsiUpgradeHandler"
	 factory-method="getInstance" init-method="init">
	<property name="masterDbService" ref="master.dbservice"/>
	<property name="service" ref="bp.asyncService"/>
	<property name="sleepTimeStay06Step" value="15"/>
	</bean>
	
	<!-- 读警告 对于新老版本不同的配置 -->
	<!-- 老版本，cn.hexing.fk.bp.dlms.alarm.AlarmRegisterNotificationOldImpl -->
	<!-- 新版本，cn.hexing.fk.bp.dlms.alarm.AlarmRegisterNotificationImpl -->
	<bean id="bp.dlms.alarmNotification" class="cn.hexing.fk.bp.dlms.alarm.AlarmRegisterNotificationImpl">
		<property name="service" ref="bp.asyncService"/>
	</bean>
	<bean id="bp.dlms.oldAlarmNotification" class="cn.hexing.fk.bp.dlms.alarm.AlarmRegisterNotificationOldImpl">
		<property name="service" ref="bp.asyncService"/>
	</bean>
	
	<!-- 加密 -->
<!-- 	<bean id="bp.dlms.cipher" class="cn.hexing.fk.bp.dlms.cipher.EsamCipher" -->
<!-- 			factory-method="getInstance"> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="bp.dlms.cipher" class="cn.hexing.fk.bp.dlms.cipher.Gcm128SoftCipher" -->
<!-- 			factory-method="getInstance"> -->
<!-- 	</bean> -->
	
	<bean id="gw.handler.updateKey" class="cn.hexing.fk.bp.processor.GwUpdateKeyHandler" 
		factory-method="getInstance">
		<property name="msgQueue" ref="bp.msgqueue"/>	
	</bean>
	
	<bean id="bp.dlms.constant" class="cn.hexing.fk.bp.dlms.util.DlmsConstant"
		factory-method="getInstance"	init-method="init">
		<property name="iranTime" value="${bp.isIranTime}"/>
		<property name="alarmTimeOffset" value="${bp.alarm.offsetTime}"/>
		<property name="alarmTimeReadInterval" value="2"/> <!-- 抄告警的最大时间间隔 -->
		<property name="dao" ref="dao.initDlmsItem"/>
	</bean>
	<bean id="bp.dlms.alarmanager" class="cn.hexing.fk.bp.dlms.alarm.DlmsAlarmManager" 
		factory-method="getInstance" init-method="init">
		<property name="alarmNotify" ref="bp.dlms.alarmNotification"/>
		<property name="oldAlarmNotify" ref="bp.dlms.oldAlarmNotification"/>
		<property name="alarmDao" ref="dao.initDlmsItem"/>
	</bean>
	<!--ANSI协议	-->
		<bean id="bp.ansi.dboperator" class="cn.hexing.fk.bp.ansi.masterDbService.MasterDbServiceAssistance"
		factory-method="getInstance">
		<property name="masterDbService" ref="master.dbservice"/>
		<property name="service" ref="bp.asyncService"/>
	</bean>
	<bean id="bp.ansi.taskoperator" class=" cn.hexing.fk.bp.ansi.masterDbService.AnsiTaskMessage"
		factory-method="getInstance" >
		<property name="service" ref="bp.asyncService"></property>
		<property name="masterDbService" ref="master.dbservice"></property>
	</bean>
</beans>
