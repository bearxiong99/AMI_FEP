/*
 * Generated by ASN.1 Java Compiler (http://www.asnlab.org/)
 * From ASN.1 module "MyHTTP"
 */
package MyHTTP;

import java.io.*;
import java.util.Vector;
import org.asnlab.asndt.runtime.conv.*;
import org.asnlab.asndt.runtime.conv.annotation.*;
import org.asnlab.asndt.runtime.type.AsnType;

public class AcceptTypes {

	@Component(0)
	public Standards standards;	/* OPTIONAL */

	@Component(1)
	public Vector<String> others;	/* OPTIONAL */


	public Object clone() {
		return TYPE.clone(this, CONVERTER);
	}

	public boolean equals(Object obj) {
		if(!(obj instanceof AcceptTypes)){
			return false;
		}
		return TYPE.equals(this, obj, CONVERTER);
	}

	public void print(PrintStream out) {
		TYPE.print(this, CONVERTER, out);
	}

	public void ber_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.BASIC_ENCODING_RULES, CONVERTER, out);
	}

	public static AcceptTypes ber_decode(InputStream in) throws IOException {
		return (AcceptTypes)TYPE.decode(in, EncodingRules.BASIC_ENCODING_RULES, CONVERTER);
	}


	public final static AsnType TYPE = MyHTTP.type(65538);

	public final static CompositeConverter CONVERTER;

	static {
		CONVERTER = new AnnotationCompositeConverter(AcceptTypes.class);
		AsnConverter standardsConverter = Standards.CONVERTER;
		AsnConverter othersConverter = new ListConverter(StringConverter.INSTANCE);
		CONVERTER.setComponentConverters(new AsnConverter[] { standardsConverter, othersConverter });
	}

}
